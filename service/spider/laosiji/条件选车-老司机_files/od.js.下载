// ************************************************//
// *************定义document.ready事件*************//
// ************************************************//
var ie = !!(window.attachEvent && !window.opera);
var wk = /webkit\/(\d+)/i.test(navigator.userAgent) && (RegExp.$1 < 525);
var fn = [];
var run = function() {
	for (var i = 0; i < fn.length; i++) fn[i]();
};
var d = document;
d.ready = function(f) {
	if (!ie && !wk && d.addEventListener)
		return d.addEventListener('DOMContentLoaded', f, false);
	if (fn.push(f) > 1) return;
	if (ie)
		(function() {
			try {
				d.documentElement.doScroll('left');
				run();
			} catch (err) {
				setTimeout(arguments.callee, 0);
			}
		})();
	else if (wk)
		var t = setInterval(function() {
			if (/^(loaded|complete)$/.test(d.readyState))
				clearInterval(t), run();
		}, 0);
};
var playSource = [];
//全局变量======================================================================================
var winWidth = window.innerWidth || document.documentElement.clientWidth,
	winHeight = window.innerHeight || document.documentElement.clientHeight,
	iDomain = 'http://imageqiniu.xxxxxbbs.com/',
	vDomain = 'http://videoqiniu.xxxxxbbs.com/';
(function(global) {
	// ************************************************//
	// ************IE8下兼容数组支持indexOf************//
	// ************************************************//
	if (!Array.prototype.indexOf) {
		Array.prototype.indexOf = function(elt /*, from*/ ) {
			var len = this.length >>> 0;
			var from = Number(arguments[1]) || 0;
			from = (from < 0) ? Math.ceil(from) : Math.floor(from);
			if (from < 0)
				from += len;
			for (; from < len; from++) {
				if (from in this &&
					this[from] === elt)
					return from;
			}
			return -1;
		};
	}
	// ************************************************//
	// *******************Od组件库*********************//
	// ************************************************//
	function Od() {
		//页面滚动动画
		this.WindowScroll = function(res) {
			var scrollTop;
			if (window.pageYOffset) {
				scrollTop = window.pageYOffset;
			} else {
				scrollTop = document.documentElement.scrollTop;
			}
			var d = parseInt((res.scrollTopVal - scrollTop) / (res.duration / 10));
			// if (d < 1) {
			// 	d = 1;
			// }
			// var top = 0,
			i = 0;
			var timer = setInterval(function() {
				scrollTop = scrollTop + d;
				window.scroll(0, scrollTop, 'aaa');
				i = i + 10;
				if (i >= res.duration) {
					clearInterval(timer);
					window.scroll(0, res.scrollTopVal, 'aaa');
					console.log('od')
					if (res.callBack) {
						res.callBack();
					}
				}
			}, 10);
		};
		this.LazyLoad = function(scrollTop) {
			window.addEventListener('scroll', winScroll);
			window.addEventListener('resize', winScroll);
			window.addEventListener('load', winScroll);

			function winScroll(e) {
				var scrollTop;
				if (window.pageYOffset) {
					scrollTop = window.pageYOffset;
				} else {
					scrollTop = document.documentElement.scrollTop;
				}
				for (var i = 0, len = document.getElementsByTagName('img').length; i < len; i++) {
					var thisImg = document.getElementsByTagName('img')[i];
					if (thisImg.getAttribute('data-src') && Od.Top(thisImg) > scrollTop && Od.Top(thisImg) < scrollTop + winHeight) {
						thisImg.style.opacity = 0;
						thisImg.style.transition = 'opacity 0.2s linear';
						thisImg.setAttribute('src', thisImg.getAttribute('data-src'));
						thisImg.setAttribute('onload', 'this.style.opacity=1;this.removeAttribute("data-src")');
					}
				}
			}
			var imgList = document.getElementsByTagName('img');
		};
		//transition运行结束回调
		this.TransitionEnd = function(res) {
			var transitions = {
				'transition': 'transitionend',
				'OTransition': 'oTransitionEnd',
				'MozTransition': 'transitionend',
				'WebkitTransition': 'webkitTransitionEnd',
				'MsTransition': 'msTransitionEnd'

			}
			var f = 1,
				t;
			for (t in transitions) {
				if (res.target.style[t] !== undefined) {
					f = transitions[t];
				}
				break;
			}

			if (res.target.addEventListener) {
				res.target.addEventListener(f, function() {
					res.callBack()
				});
			}
		};
		//图片裁切参数==================================================================================================================================
		this.ImageHtmlLoadComplete = function(dom) {
			dom.parentNode.removeChild(dom.previousSibling);
			dom.style.width = 'auto';
			dom.style.height = 'auto';
			dom.style.opacity = 1;
		};
		this.Selector = function(attr, name) {
			var htmlArr = ['div', 'span', 'ul', 'li', 'dl', 'dd', 'dt', 'input', 'textarea', 'em', 'i', 'b', 'table', 'th', 'tbody', 'td', 'tr'],
				domArr = [];
			for (var i = 0, len = htmlArr.length; i < len; i++) {
				for (var j = 0, lenn = document.getElementsByTagName(htmlArr[i]).length; j < lenn; j++) {
					var thisDom = document.getElementsByTagName(htmlArr[i])[j];
					if (thisDom.getAttribute(attr) && thisDom.getAttribute(attr) == name) {
						domArr.push(thisDom);
					}
				}
			}
			var selector = domArr.length > 1 ? domArr : domArr[0];
			return selector;
		};
		this.ImageUrl = function(res) {
			var url;
			var param;
			if (res.type == 1) {
				param = '?imageMogr2/auto-orient/thumbnail/!' + res.w + 'x' + res.h + 'r/gravity/' + res.gravity + '/crop/' + res.w + 'x' + res.h + '/quality/100';
			} else if (res.type == 2) {
				if (res.w) {
					param = '?imageView2/2/w/' + res.w + '/q/100|watermark/1/image/aHR0cDovLzd4c2N3NS5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYW9zam1rLnBuZw==/gravity/SouthEast/dy/5';
				} else if (res.h) {
					param = '?imageView2/2/h/' + res.h + '/q/100|watermark/1/image/aHR0cDovLzd4c2N3NS5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYW9zam1rLnBuZw==/gravity/SouthEast/dy/5';
				}
			}
			var iDomainPostFix = /http\:\/\/imageqiniu\.xxxxxbbs\.com\//g,
				vDomainPostFix = /http\:\/\/videoqiniu\.xxxxxbbs\.com\//g;

			if (res.hash && res.hash.match(iDomainPostFix)) {
				res.hash = res.hash.replace(iDomainPostFix, '');
				var domain = 'http://imageqiniu.xxxxxbbs.com/';
			} else if (res.hash && res.hash.match(vDomainPostFix)) {
				res.hash = res.hash.replace(vDomainPostFix, '');
				var domain = 'http://videoqiniu.xxxxxbbs.com/';
			} else {
				var domain = 'http://imageqiniu.xxxxxbbs.com/';
			}
			if (res.hash == '' || !res.hash || res.hash == null) {
				if (res.isHeadPic) {
					res.hash = 'FqSLtpREo7dZPU4hBeja7D3RBf7N';
				} else {
					if (res.w > res.h) {
						res.hash = 'FtxZWb6hRGLDqCrGLT2H4NXm2kxV';
					} else {
						res.hash = 'FsTATUN8ma9VMn0kJ4BmGrsVdspl';
					}

				}
			}
			var imageFrame = 0;
			// Od.Ajax({
			// 	method: 'get', //方法
			// 	url: domain + res.hash + '?imageInfo', //接口地址
			// 	asyc: false, //是否为异步
			// 	success: function(data) {
			// 		if (data.frameNumber > 200) {
			// 			imageFrame = parseInt(data.frameNumber);
			// 		}
			// 	}
			// });
			url = domain + res.hash + param;
			if (res.returnHtml) {
				var img = '<img src="/images/loading.gif" height=24 width=24 class="odImgLoading"/><img src="' + url + '" style="opacity:0;transition:opacity 0.2s linear;height:0px;width:0px;" onload="Od.ImageHtmlLoadComplete(this);"/>'
			} else {
				var img = new Image();
				img.style.transition = 'opacity 0.2s linear';
				img.setAttribute('height', '24');
				img.setAttribute('width', '24');
				img.src = '/images/loading.gif';
				img.style.display = 'inline-block';
				if (res.h) {
					img.style.marginTop = res.h / 2 - 9 + 'px';
				} else {
					img.style.position = 'relative';
					img.style.top = '50%';
					img.style.marginTop = '-12px';
				}
				var dummyImg = new Image();
				dummyImg.src = url;
				var timer = setInterval(function() {
					if (dummyImg.complete) {
						clearInterval(timer);
						img.style.opacity = 0;
						setTimeout(function() {
							img.style.position = 'static';
							// imageFrame <= 200 ? url = url : url = url + '/format/jpg';
							img.src = url;
							img.style.marginLeft = '0px';
							img.style.marginTop = '0px';
							img.setAttribute('height', 'auto');
							img.setAttribute('width', 'auto');
							img.style.opacity = 1;
						}, 200);

					}
				}, 10);
			}
			return img
		};
		//兼容获取target================================================================================================================================
		this.Target = function(e) {
			e = e || event || window.event;
			var t;
			if (e.target) {
				t = e.target;
			} else {
				t = e.srcElement;
			}
			return t;
		};
		//点击页面body区域=======================================================================================================
		this.Bubble = function(e, classList, callBack1, callBack2) {
			var arr = [],
				flag = false;

			function a() {
				if (e && e.parentNode) {
					b();
				} else {
					return;
				}
			};

			function b() {
				arr.push(e.className);
				e = e.parentNode;
				a();
			};
			a();
			for (var i = 0, len = classList.length; i < len; i++) {
				if (arr.indexOf(classList[i]) >= 0) {
					flag = true;
					break;
				}
			}
			if (flag) {
				callBack1();
			} else {
				callBack2();
			}
		};
		//获取node绝对位置====================================================`==========================================================================
		this.Top = function(node) {
			var offset = node.offsetTop;
			if (node.offsetParent != null) offset += this.Top(node.offsetParent);
			return offset;
		};
		this.Left = function(node) {
			var offset = node.offsetLeft;
			if (node.offsetParent != null) offset += this.Left(node.offsetParent);
			return offset;
		};
		//AJAX组件======================================================================================================================================
		this.Ajax = function(res) {
			var OdAjaxObj;
			var param = '';
			if (window.XMLHttpRequest) { // code for IE7+, Firefox, Chrome, Opera, Safari
				OdAjaxObj = new XMLHttpRequest();
			} else { // code for IE6, IE5
				OdAjaxObj = new ActiveXObject("Microsoft.XMLHTTP");
			}
			if (res.before) {
				res.before();
			}
			if (res.data) {
				var dataIndex = 0;
				res.url = res.url;
				// for (var i in res.data) {
				// 	if (dataIndex <= 0) {
				// 		res.url += i + '=' + res.data[i];
				// 	} else {
				// 		res.url += '&' + i + '=' + res.data[i];
				// 	}
				// 	dataIndex++;
				// }
				for (var i in res.data) {
					if (dataIndex <= 0) {
						param += i + '=' + res.data[i];
					} else {
						param += '&' + i + '=' + res.data[i];
					}
					dataIndex++;
				}
			}
			OdAjaxObj.open(res.method, res.url, res.asyc);
			OdAjaxObj.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded;charset=UTF-8');
			if (res.headerKey && res.headerVal) {
				OdAjaxObj.setRequestHeader(res.headerKey, res.headerVal);
			}
			OdAjaxObj.onreadystatechange = function(e) {
				switch (OdAjaxObj.readyState) {
					case 0:
						break;
					case 1:
						break;
					case 2: //请求已被服务端接收
						break;
					case 3: //请求处理中
						break;
					case 4: //响应已就绪
						if (OdAjaxObj.status == 200) {
							var resTxt = OdAjaxObj.responseText;
							resTxt = resTxt.replace(/(^\"*)|(\"*$)/g, "");
							var dataJson = new Object;
							if (resTxt != '') {
								if (OdAjaxObj.getResponseHeader('Content-Type').indexOf('application/json') >= 0) {
									// dataJson = eval('(' + (resTxt) + ')');
									dataJson = JSON.parse(resTxt);
								} else {
									dataJson = resTxt;
								}
							}
							res.success(dataJson);
						} else {
							if (res.error) {
								res.error(dataJson);
							}
						}
						break;
				}
			}
			OdAjaxObj.send(param);

		};
		//信使组件======================================================================================================================================
		this.Alert = function(res) {
			if (!document.querySelector('.odAlert')) {
				var that = this.Alert;
				var closeTigger = true; //触发关闭必要条件
				// if (!document.getElementById('OdMask')) {
				var mask = document.createElement('div');
				mask.setAttribute('style', 'position:fixed;width:100%;height:100%;background:#000;filter:alpha(opacity=50);background:rgba(0,0,0,0.5);top:0px;left:0px;z-index:8888;');
				// mask.id = 'OdMask';
				document.body.appendChild(mask);
				// }
				var odAlert = document.createElement('div');
				odAlert.className = 'odAlert';
				odAlert.style.zIndex = 8889;
				if (window.pageYOffset) {
					odAlert.style.top = window.pageYOffset + 100 + 'px';
				} else {
					odAlert.style.top = document.documentElement.scrollTop + 100 + 'px';
				}
				if (res.styleName) {
					odAlert.className = 'odAlert ' + res.styleName;
				}
				var content = document.createElement('div');
				content.setAttribute('style', 'text-align:left;margin-bottom:20px;');
				content.innerHTML = res.html;
				var submitBtn = document.createElement('a');
				submitBtn.href = 'javascript:;';
				submitBtn.className = 'odAlertSubmitBtn';
				if (res.submitBtnText) {
					submitBtn.innerText = res.submitBtnText;
				} else {
					submitBtn.innerText = '确定';
				}
				odAlert.appendChild(content);
				odAlert.appendChild(submitBtn);
				that.closeAlert = function(target) {
					if (closeTigger) {
						closeTigger = false;
						odAlert.style.transition = 'all 0.2s ease-in';
						odAlert.style.transform = 'scale(1.2)';
						setTimeout(function() {
							odAlert.style.transition = 'all 0.2s ease-out';
							odAlert.style.transform = 'scale(1)';
							odAlert.style.opacity = 0;
							odAlert.style.filter = 'alpha(opacity=0)';
						}, 200);
						setTimeout(function() {
							document.body.removeChild(odAlert);
							document.body.removeChild(mask);
							//确定回调***
							if (res.callBack && target == submitBtn) {
								res.callBack();
							}
							closeTigger = true;
						}, 400);
					}
				};
				submitBtn.onclick = function(e) {
					that.closeAlert(Od.Target(e));
				};
				//取消按钮***
				if (res.cancelBtn) {
					var cancelBtn = document.createElement('a');
					if (res.cancelBtnText) {
						cancelBtn.innerText = res.cancelBtnText;
					} else {
						cancelBtn.innerText = '取消';
					}
					cancelBtn.href = 'javascript:;';
					cancelBtn.className = 'odAlertCancelBtn';
					odAlert.appendChild(cancelBtn);
					cancelBtn.onclick = function(e) {
						that.closeAlert();
					};
				}
				//弹出***
				document.body.appendChild(odAlert);
				setTimeout(function() {
					odAlert.style.marginLeft = -odAlert.offsetWidth / 2 + 'px';
					odAlert.style.transition = 'all 0s ease-in';
					setTimeout(function() {
						odAlert.style.transition = 'all 0.2s ease-in';
						odAlert.style.opacity = 1;
						odAlert.style.filter = 'alpha(opacity=100)';
						odAlert.style.transform = 'scale(1.2)';
					}, 40);
					setTimeout(function() {
						odAlert.style.transition = 'all 0.2s ease-out';
						odAlert.style.transform = 'scale(1)';
						submitBtn.focus();
						// document.onkeyup = function(e) {
						// 	if (e && e.keyCode == 27 && document.querySelector('.odAlert')) {
						// 		that.close();
						// 	}
						// }
					}, 240);
				}, 20);
			}
		};
		//弹窗组件======================================================================================================================================
		this.Window = function(res) {
			var odWindowFlag = false;
			winWidth = window.innerWidth || document.documentElement.clientWidth;
			var that = this.Alert;
			var closeTigger = false; //触发关闭必要条件
			if (!document.getElementById('OdWindowMask')) {
				var mask = document.createElement('div');
				mask.setAttribute('style', 'position:fixed;width:100%;height:100%;background:#000;filter:alpha(opacity=50);background:rgba(0,0,0,0.5);top:0px;left:0px;z-index:999;');
				mask.id = 'OdWindowMask';
				document.body.appendChild(mask);
			}
			//主体***
			var odWindow = document.createElement('div');
			// odWindow.style.width = res.w + 'px';
			odWindow.className = 'odWindow';
			if (window.pageYOffset) {
				odWindow.style.top = window.pageYOffset + 100 + 'px';
			} else {
				odWindow.style.top = document.documentElement.scrollTop + 100 + 'px';
			}
			if (res.styleName) {
				odWindow.className = 'odWindow ' + res.styleName;
			}
			//关闭按钮***
			var closeBtn = document.createElement('a');
			closeBtn.href = 'javascript:;';
			closeBtn.className = 'odWindowcloseBtn';
			closeBtn.innerHTML = '<i></i>';
			//标题***
			var odWindowTitle = document.createElement('div');
			odWindowTitle.className = 'odWindowTitle';
			if (res.title) {
				odWindowTitle.innerHTML = '<h3>' + res.title + '</h3>';
			} else {
				odWindowTitle.innerHTML = '<h3>老司机-有趣的汽车社区</h3>';
				odWindowTitle.style.display = 'none';
			}
			if (res.id) {
				odWindow.id = res.id;
				odWindowTitle.id = res.id + '-odWindowTitle'
			}
			odWindowTitle.onselectstart = function() {
				return false;
			}
			odWindowTitle.appendChild(closeBtn);
			//内容***
			var content = document.createElement('div');
			content.className = "content";
			if (typeof(res.html) === 'string') {
				content.innerHTML = res.html;
			} else {
				content.appendChild(res.html);
			}
			odWindow.appendChild(odWindowTitle);
			odWindow.appendChild(content);
			//弹出***
			document.body.appendChild(odWindow);
			// var thisWindowWidth = odWindow.offsetWidth;
			// var windowTimer = setInterval(function() {
			// if (odWindow.offsetWidth == thisWindowWidth) {
			// clearInterval(windowTimer);
			odWindow.style.transition = 'all 0s ease-in';
			setTimeout(function() {
				odWindow.style.left = winWidth / 2 - odWindow.offsetWidth / 2 + 'px';
			}, 40);
			setTimeout(function() {
				odWindow.style.transition = 'all 0.2s ease-in';
				odWindow.style.opacity = 1;
				odWindow.style.filter = 'alpha(opacity=100)';
				odWindow.style.transform = 'scale(1.2)';
			}, 60);
			setTimeout(function() {
				odWindow.style.transition = 'all 0.2s ease-out';
				odWindow.style.transform = 'scale(1)';
				if (res.submitBtn) {
					submitBtn.focus();
				}
				document.onkeyup = function(e) {
					if (e && e.keyCode == 27) {
						// if (res.closeAttention) {
						// 	Od.Alert({
						// 		html: res.closeAttention, //弹出框html
						// 		cancelBtn: true, //是否显示取消按钮，默认false，可不加。
						// 		target: Od.Target(e), //触发此事件按钮
						// 		callBack: function() { //点击确定的回调，可不加
						// 			that.closeWindow();
						// 		}
						// 	});
						// } else {
						// 	that.closeWindow();
						// }
						var flag = false;
						if (res.closeAttention) {
							flag = res.closeAttention();
						}
						if (flag) {
							Od.Alert({
								html: res.closeAttentionHtml, //弹出框html
								cancelBtn: true, //是否显示取消按钮，默认false，可不加。
								target: Od.Target(e), //触发此事件按钮
								callBack: function() { //点击确定的回调，可不加
									that.closeWindow();
								}
							});
						} else {
							that.closeWindow();
						}
					}
				}
			}, 260);
			setTimeout(function() {
				closeTigger = true;
				if (res.openCallBack) {
					res.openCallBack();
				}
			}, 300);
			var endX = 0,
				endY = 0,
				startY = 0,
				startX = 0;
			Od.Drag(odWindowTitle, odWindowTitle.parentNode);
			//确认按钮***
			if (res.submitBtn) {
				var submitBtn = document.createElement('a');
				submitBtn.href = 'javascript:;';
				submitBtn.className = 'odWindowSubmitBtn';
				if (res.submitBtnText) {
					submitBtn.innerText = res.submitBtnText;
				} else {
					submitBtn.innerText = '确定';
				}
				odWindow.appendChild(submitBtn);
				//确认按钮操作***
				submitBtn.onclick = function(e) {
					that.closeWindow(Od.Target(e));
					if (res.callBack) {
						res.callBack();
					}
				};
			}
			//取消按钮***
			if (res.cancelBtn) {
				var cancelBtn = document.createElement('a');
				if (res.cancelBtnText) {
					cancelBtn.innerText = res.cancelBtnText;
				} else {
					cancelBtn.innerText = '取消';
				}
				cancelBtn.href = 'javascript:;';
				cancelBtn.className = 'odWindowCancelBtn';
				odWindow.appendChild(cancelBtn);
				cancelBtn.onclick = function(e) {
					that.closeWindow(this);
				};
			}
			//关闭操作***
			that.closeWindow = function(target) {
				if (target) {
					if (target.className == 'odWindowSubmitBtn' || target.className == 'odWindowCancelBtn') {
						odWindow = target.parentNode;
					} else {
						odWindow = target.parentNode.parentNode;
					}
				} else {
					var windowList = document.querySelectorAll('.odWindow');
					odWindow = windowList[windowList.length - 1];
				}
				if (closeTigger) {
					closeTigger = false;
					odWindow.style.transition = 'all 0.2s ease-in';
					odWindow.style.transform = 'scale(1.2)';
					setTimeout(function() {
						odWindow.style.transition = 'all 0.2s ease-out';
						odWindow.style.transform = 'scale(1)';
						odWindow.style.opacity = 0;
						odWindow.style.filter = 'alpha(opacity=0)';
					}, 200);
					setTimeout(function() {
						if (document.querySelectorAll('.odWindow').length <= 1) {
							document.body.removeChild(document.getElementById('OdWindowMask'));
							// document.body.removeChild(mask);
						}
						document.body.removeChild(odWindow);
						//确定回调***
						// if (target.className == 'odWindowSubmitBtn' && res.callBack) {
						// 	res.callBack();
						// }
						if (res.closeCallBack) {
							res.closeCallBack();
						}
						closeTigger = true;
						//关闭后移动绑定给其他window
						var other = document.querySelectorAll('.odWindow');
						if (other.length > 0) {
							var lastWindowTitle = other[other.length - 1].querySelector('.odWindowTitle');
							Od.Drag(lastWindowTitle, other[other.length - 1]);
						}
					}, 400);
				}
			};
			//关闭按钮操作***
			closeBtn.onclick = function(e) {
				var btn = this;
				var flag = false;
				if (res.closeAttention) {
					flag = res.closeAttention();
				}
				if (flag) {
					Od.Alert({
						html: res.closeAttentionHtml, //弹出框html
						cancelBtn: true, //是否显示取消按钮，默认false，可不加。
						target: Od.Target(e), //触发此事件按钮
						callBack: function() { //点击确定的回调，可不加
							that.closeWindow(btn);
						}
					});
				} else {
					that.closeWindow(btn);
				}
			};
			return content;
		};
		//自定义滚动条==================================================================================================================================
		this.CustomScroll = function(res) {
			var that = this.CustomScroll;
			var views = document.querySelectorAll('.' + res.target);
			for (var i = 0, len = views.length; i < len; i++) {
				views[i].style.overflow = 'hidden';
				views[i].style.position = 'relative';
				views[i].style.height = res.height + 'px';
				views[i].style.width = res.width + 'px';
				views[i].className = res.target + ' odCustomScroll';
				views[i].style.paddingRight = res.barWidth * 2 + 'px';
				views[i].children[0].style.position = 'absolute';
				// views[i].children[0].style.transition = 'top 0.5s ease-out';
				if (!views[i].querySelector('.scrollBar')) {
					var slideBar = document.createElement('div');
					slideBar.className = 'scrollBar';
					var handle = document.createElement('a');
					handle.href = 'javascript:;';
					handle.className = 'handle';
					handle.style.left = '0px';
					slideBar.appendChild(handle);
				} else {
					var slideBar = views[i].querySelector('.scrollBar');
					var handle = views[i].querySelector('.handle');
				}
				if (res.barWidth) {
					slideBar.style.width = res.barWidth + 'px';
					// handle.style.borderRadius = res.barWidth / 2 + 'px';
				} else {
					slideBar.style.width = '10px';
					// handle.style.borderRadius = '5px';
				}
				// handle.style.transition = 'top 0.5s ease-out';

				slideBar.onselectstart = function() {
					return false;
				}
				handle.onselectstart = function() {
					return false;
				};
				handle.style.height = views[i].offsetHeight * (views[i].offsetHeight / views[i].children[0].offsetHeight) + 'px';
				if (views[i].children[0].offsetTop + views[i].children[0].offsetHeight < views[i].offsetHeight && res.scrollBottom) {
					views[i].children[0].style.top = views[i].offsetHeight - views[i].children[0].offsetHeight + 'px';
				}
				if (handle.style.top) {
					handle.style.top = -views[i].children[0].offsetTop * (views[i].offsetHeight / views[i].children[0].offsetHeight) + 'px';
					console.log(views[i])
				}
				if (views[i].offsetHeight < views[i].children[0].offsetHeight) {
					if (!views[i].querySelector('.scrollBar')) {
						views[i].appendChild(slideBar);
					}
					if (typeof views[i].onmousewheel == "undefined") {
						views[i].addEventListener("DOMMouseScroll", function(e) {
							e.preventDefault();
							that.Scroll(this.children[0], -e.detail);
						}, false);
					} else {
						views[i].onmousewheel = function(e) {
							if (e) {
								e.preventDefault();
							} else {
								window.event.returnValue = false;
							}
							e = e || window.event;
							that.Scroll(this.children[0], e.wheelDelta);
						}
					}
					var handleFlag = false,
						endY = 0,
						startY = 0;
					handle.onmousedown = function(e) {
						handleFlag = true;
						if (e) {
							e.preventDefault();
						} else {
							window.event.returnValue = false;
						}
						e = e || event || window.event;
						if (e.y) {
							startY = e.y;
						} else {
							startY = e.clientY;
						}
						// if (res.scrollTimer) {
						// 	clearInterval(scrollTimer);
						// }
					};
					views[i].onmousemove = function(e) {
						if (handleFlag) {
							if (e) {
								e.preventDefault();
							} else {
								window.event.returnValue = false;
							}
							handle.style.transition = '';
							e = e || event || window.event;
							if (e.y) {
								endY = e.y;
							} else {
								endY = e.clientY;
							}
							if (handle.offsetTop + (endY - startY) < 0) {
								handle.style.top = '0px';
							} else if (handle.offsetTop + (endY - startY) > res.height - handle.offsetHeight) {
								handle.style.top = res.height - handle.offsetHeight + 'px';
							} else {
								handle.style.top = handle.offsetTop + (endY - startY) + 'px';
							}
							var view = handle.parentNode.previousElementSibling || handle.parentNode.previousSibling
							view.style.top = -handle.offsetTop * (view.offsetHeight / view.parentNode.offsetHeight) + 'px';
							startY = endY;
						}
					};
					document.body.onmouseup = function() {
						if (handleFlag) {
							handleFlag = false;
						} else {
							return;
						}
					};
					var thisView = views[i];
					if (res.scrollBottom) {
						var scrollBottomTimer = setInterval(function() {
							var aaa = handle.style.top;
							if (res.scrollBottom) {
								var tops = parseInt(thisView.offsetHeight) - parseInt(thisView.children[0].offsetHeight);
								thisView.children[0].style.top = tops + 'px';
								handle.style.top = -thisView.children[0].offsetTop * (thisView.children[0].parentNode.offsetHeight / thisView.children[0].offsetHeight) + 'px';
							}
							if (handle.style.top === aaa) {
								clearInterval(scrollBottomTimer)
							}
						}, 100);
					}

				} else {
					if (res.scrollBottom) {
						var tops = parseInt(views[i].offsetHeight) - parseInt(views[i].children[0].offsetHeight);
						views[i].children[0].style.top = tops + 'px';
						handle.style.top = -views[i].children[0].offsetTop * (views[i].children[0].parentNode.offsetHeight / views[i].children[0].offsetHeight) + 'px';
					}
				}
			}
			that.Scroll = function(scrollView, delta, speed) {
				speed = parseInt(scrollView.offsetHeight / scrollView.parentNode.offsetHeight);
				if (res.speed) {
					speed = res.speed * speed;
				} else {
					speed = 10 * speed;
				}
				var top = scrollView.offsetTop;
				if (delta < 0) {
					if (top - speed > scrollView.parentNode.offsetHeight - scrollView.offsetHeight) {
						scrollView.style.top = top - speed + 'px';
					} else {
						scrollView.style.top = scrollView.parentNode.offsetHeight - scrollView.offsetHeight + 'px';
					}
				}
				if (delta > 0) {
					if (top + speed < 0) {
						scrollView.style.top = top + speed + 'px';
					} else {
						scrollView.style.top = '0px';
					}

				}
				var scrollTop = scrollView.offsetTop;
				if (res.scrollFunc) {
					res.scrollFunc(scrollTop);
				}
				scrollView.parentNode.querySelector('.handle').style.top = -scrollView.offsetTop * (scrollView.parentNode.offsetHeight / scrollView.offsetHeight) + 'px';
			};
		};
		this.CustomSelect = function(res) {
			var container = document.createElement('div');
			container.className = 'OdSelectContainer';
			if (res.linkageName) {
				container.setAttribute('data-linkage', res.linkageName)
			}
			var selectMain = document.createElement('a');
			selectMain.setAttribute('href', 'javascript:void(0);')
			if (!res.disabled) {
				selectMain.className = 'OdSelectMain';
			} else {
				selectMain.className = 'OdSelectMain disabled';
			}
			selectMain.innerHTML = '<span>' + res.defaultValue + '</span><em></em>';
			var showHideMenu = function(target, event) {
				if (document.querySelector('.OdSelectMenuContainer')) {
					document.querySelector('.OdSelectMenuContainer').parentNode.removeChild(document.querySelector('.OdSelectMenuContainer'));
				} else {
					arr = res.getData();
					var liHeight = 31 * arr.length;
					var selectMenuContainer = document.createElement('div');
					selectMenuContainer.className = 'OdSelectMenuContainer';
					var selectMenuBox = document.createElement('div');
					selectMenuBox.className = 'OdSelectMenuBox';
					var selectMenu = document.createElement('ul');
					selectMenu.className = 'OdSelectMenu';
					var abcList = [];
					for (var i = 0, len = arr.length; i < len; i++) {
						if (arr[i].letter && abcList.indexOf(arr[i].letter) < 0) {
							abcList.push(arr[i].letter);
						}
						var li = document.createElement('li');
						li.setAttribute('data-id', arr[i].id);
						if (arr[i].letter) {
							li.setAttribute('data-letter', arr[i].letter);
							li.innerHTML = '<a href="javascript:;" style="padding-left:30px;">' + arr[i].name + '</a>';
						} else {
							li.innerHTML = '<a href="javascript:;">' + arr[i].name + '</a>';
						}
						li.onclick = function() {
							var val = this.innerText;
							this.parentNode.parentNode.parentNode.parentNode.querySelector('.OdSelectMain').innerHTML = '<span>' + val + '</span><em></em>';
							if (res.callBack) {
								this.parentNode.parentNode.parentNode.parentNode.setAttribute('data-id', this.getAttribute('data-id'));
								res.callBack(this.parentNode.parentNode.parentNode.parentNode);
							}
						}
						if (arr[i].letter) {
							if (!arr[i - 1] || arr[i].letter != arr[i - 1].letter) {
								var letterTitle = document.createElement('h5');
								letterTitle.setAttribute('style', 'padding-left:20px;background:#fbfbfb;line-height:20px;border-top:1px solid #e9e9e9');
								letterTitle.id = 'selectMenuLetterTitle-' + arr[i].letter;
								letterTitle.innerText = arr[i].letter;
								selectMenu.appendChild(letterTitle);
							}
						}
						if (arr[i].factory) {
							var saleTitle = document.createElement('h5');
							saleTitle.className = 'saleTitle';
							if (i == 0) {
								var factoryTitle = document.createElement('h5');
								factoryTitle.className = 'factoryTitle';
								if (arr[i].state == 20) {
									saleTitle.innerHTML = '在售';
								} else {
									saleTitle.innerHTML = '停售';
								}
								if (arr[i].factory.name) {
									factoryTitle.innerHTML = arr[i].factory.name;
								}
								selectMenu.appendChild(saleTitle);
								selectMenu.appendChild(factoryTitle);
							}
							if (i > 0) {
								var factoryTitle = document.createElement('h5');
								if (arr[i].state != arr[i - 1].state) {
									if (arr[i].state == 1) {
										saleTitle.innerHTML = '在售';
									} else {
										saleTitle.innerHTML = '停售';
									}
									selectMenu.appendChild(saleTitle);
								}
								if (arr[i].factory.name != arr[i - 1].factory.name || arr[i].state != arr[i - 1].state) {
									factoryTitle.innerHTML = arr[i].factory.name;
									factoryTitle.className = 'factoryTitle';
									selectMenu.appendChild(factoryTitle);
								}

							}
						}
						selectMenu.appendChild(li);
					}
					selectMenuBox.appendChild(selectMenu);
					selectMenuContainer.appendChild(selectMenuBox);
					target.parentNode.appendChild(selectMenuContainer);
					var menuHeight = liHeight > res.height ? res.height : liHeight;
					selectMenuContainer.style.height = '0px';
					setTimeout(function() {
						var scroll = Od.CustomScroll({
							target: 'OdSelectMenuBox', //应用自定义滚动元素的className String
							height: menuHeight, //高度，小于内部元素高度 Integer
							barWidth: 3, //滚动条宽度
							speed: parseInt(menuHeight / selectMenu.offsetHeight * 10) < 1 ? 1 : parseInt(menuHeight / selectMenu.offsetHeight * 10)
						});
						selectMenuContainer.style.height = menuHeight + 'px';
						if (abcList.length > 0) {
							var letterList = document.createElement('div');
							letterList.className = 'letterList';
							letterList.style.height = res.height + 'px';
							letterList.style.position = 'absolute';
							for (var i = 0, len = abcList.length; i < len; i++) {
								var a = document.createElement('a');
								a.setAttribute('href', 'javascript:;');
								a.className = 'abc-nav';
								a.innerText = abcList[i];
								a.onclick = function() {
									var thisLetter = this.innerText;
									var thisMenu = this.parentNode.parentNode;
									var top = document.getElementById('selectMenuLetterTitle-' + thisLetter).offsetTop;
									if (top > thisMenu.querySelector('.OdSelectMenu').offsetHeight - menuHeight) {
										top = thisMenu.querySelector('.OdSelectMenu').offsetHeight - menuHeight;
									}
									thisMenu.querySelector('.OdSelectMenu').style.top = -top + 'px';
									thisMenu.querySelector('.handle').style.top = top * menuHeight / thisMenu.querySelector('.OdSelectMenu').offsetHeight + 'px';
								};
								letterList.appendChild(a);
							}
							selectMenuBox.appendChild(letterList);
						}
					}, 100);
				}

			};
			selectMain.onclick = function(event) {
				if (!res.disabled) {
					showHideMenu(this, event);
				}
			};

			function a(e1, arr1) {
				if (e1.target && e1.target.parentNode) {
					arr1.push(e1.target.parentNode.className);
					b(e1, arr1);
				} else {
					if (e1.target && e1.target.className) {
						arr1.push(e1.target.className);
					}

				}
			}

			function b(e2, arr2) {
				e2 = e2.target.parentNode;
				a(e2, arr2);
			}
			document.body.onclick = function(e) {
				var arr = [];
				a(e, arr);
				if (arr.indexOf('OdSelectMain') < 0 && e.target.className != 'abc-nav') {
					for (var j = 0, lenn = document.querySelectorAll('.OdSelectContainer').length; j < lenn; j++) {
						if (document.querySelectorAll('.OdSelectContainer')[j].querySelector('.OdSelectMenuContainer')) {
							document.querySelectorAll('.OdSelectContainer')[j].querySelector('.OdSelectMenuContainer').style.height = '0px';
							document.querySelectorAll('.OdSelectContainer')[j].removeChild(document.querySelectorAll('.OdSelectContainer')[j].querySelector('.OdSelectMenuContainer'));

						}
					}
				}
			};
			container.appendChild(selectMain)
			return container;
		};
		//自定义拖拽====================================================================================================================================
		this.Drag = function(handle, target) {
			var x = 0,
				y = 0,
				startX = 0,
				startY = 0,
				endX = 0,
				endY = 0,
				handleFlag = false;
			handle.style.cursor = 'move';
			handle.onselectstart = function() {
				return false;
			}
			handle.onmousedown = function(e) {
				target.style.transition = '0s all linear';
				handleFlag = true;
				if (e) {
					e.preventDefault();
				} else {
					window.event.returnValue = false;
				}
				e = e || event || window.event;
				if (e.y) {
					startY = e.y;
					startX = e.x;
				} else {
					startY = e.clientY;
					startX = e.clientX;
				}
				x = target.offsetLeft;
				y = target.offsetTop;
			};
			window.onmousemove = function(e) {
				if (handleFlag) {
					if (e) {
						e.preventDefault();
					} else {
						window.event.returnValue = false;
					}
					e = e || event || window.event;
					if (e.y) {
						endY = e.y;
						endX = e.x;
					} else {
						endY = e.clientY;
						endX = e.clientX;
					}
					target.style.top = y + (endY - startY) + 'px';
					target.style.left = x + (endX - startX) + 'px';
				}
			};
			window.onmouseup = function() {
				if (handleFlag) {
					handleFlag = false;
				}
			};
		};
		//单项拖拽排序==================================================================================================================================
		this.Sortable = function(res) {
			var dragFlag = false;
			var parentDom = document.getElementById(res.id);
			parentDom.style.position = 'relative';
			parentDom.style.overflow = 'hidden';
			var targets = parentDom.getElementsByTagName(res.el);
			var x = 0,
				y = 0,
				startX = 0,
				startY = 0,
				endX = 0,
				endY;

			function domCoincide(e, parentDom, thisDom, domList) {
				var dummy = document.getElementById('dummy');
				var dummyLeft = dummy.offsetLeft;
				var dummyTop = dummy.offsetTop;
				var item = dummy.cloneNode(true);
				var addBtn = document.getElementById(res.id + '-addMicroTextImgBtn');
				for (var i = 0, len = domList.length; i < len; i++) {
					if (domList[i].offsetLeft + domList[i].offsetWidth > thisDom.offsetLeft && domList[i].offsetLeft < thisDom.offsetLeft && domList[i].offsetTop + domList[i].offsetHeight > thisDom.offsetTop && domList[i].offsetTop < thisDom.offsetTop) {
						if (dummy.offsetLeft < domList[i].offsetLeft || dummy.offsetTop < domList[i].offsetTop) {
							item.id = 'newDummy';
							if (i + 1 >= domList.length) {
								parentDom.insertBefore(item, addBtn);
							} else {
								parentDom.insertBefore(item, domList[i + 1]);
							}

						} else {
							parentDom.insertBefore(item, domList[i]);
						}
						parentDom.removeChild(dummy);
						if (document.getElementById('newDummy')) {
							document.getElementById('newDummy').id = 'dummy';
						}
						document.getElementById('dummy').style.opcity = '0.5';
						document.getElementById('dummy').style.filter = 'alpha(opacity=50)';
						// break;
					}
				}
			}

			function aaa(targets) {
				targets = targets;
				for (var i = 0, len = targets.length; i < len; i++) {
					// parentDom.getElementsByTagName('a')[i].onclick = function(e) {
					// 	e = event || window.event;
					// 	if (e.preventDefault) {
					// 		e.preventDefault();
					// 	} else {
					// 		window.event.returnValue = false;
					// 	}
					// 	alert("!")
					// 	return;
					// };
					parentDom.getElementsByTagName(res.el)[i].style.cursor = 'move';
					parentDom.getElementsByTagName(res.el)[i].onmousedown = function(e) {
						var targetDom;
						e = e || event || window.event;
						if (e.target) {
							targetDom = e.target;
						} else {
							targetDom = e.srcElement;
						}

						if (e.preventDefault) {
							e.preventDefault();
						} else {
							window.event.returnValue = false;
						}
						if (targetDom.className == res.handleDom) {
							res.handleFunc(targetDom);
						} else {
							dragFlag = true;
							if (e.x || e.y) {
								startX = e.x;
								startY = e.y;
							} else {
								startX = e.clientX;
								startY = e.clientY;
							}

							x = this.offsetLeft;
							y = this.offsetTop;
							this.onselectstart = function() {
								return false;
							}
							this.parentNode.onselectstart = function() {
								return false;
							}
							var item = this.cloneNode(true);
							// item.style.filter = 'alpha(opacity=50)';
							// item.style.opacity = 0.5;
							item.id = 'dummy';
							this.style.position = 'absolute';
							this.style.zIndex = 999;
							this.style.left = x + 'px';
							this.style.top = y + 'px';
							this.id = "dragable";
							parentDom.insertBefore(item, this);
						}

					};
					parentDom.getElementsByTagName(res.el)[i].onmousemove = function(e) {
						var targetDom;
						e = e || event || window.event;
						if (e.target) {
							targetDom = e.target;
						} else {
							targetDom = e.srcElement;
						}
						if (e.preventDefault) {
							e.preventDefault();
						} else {
							window.event.returnValue = false;
						}
						if (dragFlag == true) {
							if (e.x || e.y) {
								endX = e.x;
								endY = e.y;
							} else {
								endX = e.clientX;
								endY = e.clientY;
							}
							this.style.top = y + (endY - startY) + 'px';
							this.style.left = x + (endX - startX) + 'px';

							function doms(list) {
								list = [];
								for (var i = 0, len = targets.length; i < len; i++) {
									if (targets[i].id != 'dragable' && targets[i].id != 'dummy') {
										list.push(targets[i]);
									}
								}
								return list;
							}
							domCoincide(e, parentDom, this, doms());
						}
					};
				}
			};
			aaa(targets);
			document.onmouseup = function() {
				if (dragFlag == true) {
					var dragDom = document.getElementById('dragable');
					var dummyDom = document.getElementById('dummy');
					dragDom.style.left = dummyDom.offsetLeft + 'px';
					dragDom.style.top = dummyDom.offsetTop + 'px';
					// dummyDom.style.opacity = 1;
					dummyDom.style.filter = 'alpha(opacity=100)';
					dummyDom.id = '';
					parentDom.removeChild(dragDom);
					parentDom = document.getElementById(res.id);
					targets = parentDom.getElementsByTagName(res.el);
					dragFlag = false;
				}
				if (dragFlag == false) {
					aaa(targets);
				}
			};
		};
		//点击插入方法==================================================================================================================================
		this.ClickToInsert = function(target, myValue) {
			var $t = target;
			if (document.selection) {
				target.focus();
				sel = document.selection.createRange();
				sel.text = myValue;
				target.focus();
			} else if ($t.selectionStart || $t.selectionStart == '0') {
				var startPos = $t.selectionStart;
				var endPos = $t.selectionEnd;
				var scrollTop = $t.scrollTop;
				$t.value = $t.value.substring(0, startPos) + myValue + $t.value.substring(endPos, $t.value.length);
				target.focus();
				$t.selectionStart = startPos + myValue.length;
				$t.selectionEnd = startPos + myValue.length;
				$t.scrollTop = scrollTop;
			} else {
				target.value += myValue;
				target.focus();
			}
		};
		//自定义表情包==================================================================================================================================
		this.InsertFace = function(that, target) { //插入表情转成文本
			for (key in faceDic) {
				if (faceDic[key] == that.getAttribute('faceStr')) {
					faceStr = key;
				}
			}
			this.ClickToInsert(target, faceStr);
		};
		this.TransTextToCode = function(res) { //提交表情文本转成语法
			var reg = /(\[\$)([\u4e00-\u9fa5,a-z]*)(\$\])/g;
			var aaa = res.match(reg);
			if (aaa != null) {
				for (var i = 0; i < aaa.length; i++) {
					res = res.replace(aaa[i], faceDic[aaa[i]]);
				}
			}
			return res;
		};
		//读取字符转义==================================================================================================================================
		this.TransText = function(res) {
			var that = this.TransText;
			that.transHtml = function(text) {
				var htmlRegLeft = new RegExp("<", "gi");
				var htmlRegRight = new RegExp(">", "gi");
				text = text.replace(htmlRegLeft, "&lt;");
				text = text.replace(htmlRegRight, "&gt;");
				text = text.replace(/\n/g, '<br/>');
				return text;
			};
			that.transUrl = function(text) {
				var urlReg = /([^"]|^)((http|ftp|https):\/\/[\w]+(.[\w]+)([\w\-\.,@?^=%&:/~\+#]*[\w\-\@?^=%&/~\+#]))/g;
				var urlList = text.match(urlReg);
				if (urlList != null) {
					text = text.replace(urlReg, '$1<a href="$2" class="urlLink" target="_blank"><i class="icon icon-link"></i>网页链接</a>');
				}
				return text;
			};
			that.transCustomFace = function(text) {
				var faceReg1 = /(\[5X:)([0-9]*)(\])/g;
				var faceList1 = text.match(faceReg1);
				if (faceList1 != null) {
					text = text.replace(faceReg1, '<img src="/images/5xface/$2.png" class="custom-face1"/>');
				}
				return text;
			};
			that.transTopic = function(text) {
				var topicReg = /(#)([\u4e00-\u9fa5,A-Za-z0-9]*)(#)/g;
				if (res.topicTurn) {
					text = text.replace(topicReg, '<a href="' + res.topicTurn + '$2" class="topicLink" target="_blank">#$2#</a>');
				} else {
					text = text.replace(topicReg, '<a href="javascript:;" data-topic="$2" class="topicLink">#$2#</a>');
				}
				return text;
			};
			that.transAtName = function(text) {
				// var atReg = /(\@[^@]*?)(.*?)(\s|\:|\：)/g;
				var atReg = /@[^@|:|,|，|\s|\/|\<]{2,16}/g;
				// text = text.replace(atReg, '<a href="javascript:;" data-user="$2" target="_blank" class="atLink">$2</a>');
				var atList = text.match(atReg);
				var textList = text.split(atReg);
				var text1 = '';
				for (var i = 0, len = textList.length; i < len; i++) {
					if (i < len - 1) {
						var atName = atList[i].replace('@', '');
						// if (res.atTurn) {
						// 	var atHtml = '<a href="' + res.atTurn + atName + '" data-user="' + atName + '" target="_blank"  class="atLink">@' + atName + '</a>';
						// } else {
						// 	var atHtml = '<a href="javascript:;" data-user="' + atName + '"  class="atLink">@' + atName + '</a>';
						// }
						var atHtml = '<a href="/new_web/html/userlook.html?lookname=' + atName + '" data-user="' + atName + '" target="_blank"  class="atLink">@' + atName + '</a>';
						text1 = text1 + textList[i] + atHtml;
					} else {
						text1 = text1 + textList[i];
					}
				}
				text = text1;
				// if (res.atTurn) {
				// 	text = text.replace(atReg, '<a href="' + res.atTurn + '$2" target="_blank" class="atLink">$1</a>$2');
				// } else {
				// 	text = text.replace(atReg, '<a href="javascript:;" data-user="$2" target="_blank" class="atLink">$1</a>$2');
				// }
				// var atList = text.match(atReg);
				// if (atList != null) {
				// 	for (var i = 0; i < atList.length; i++) {
				// 		var userName = atList[i].replace('@', '');
				// 		userName = userName.replace(/\s/g, '');
				// 		if (res.atTurn) {
				// 			text = text.replace(atList[i], '<a href="' + res.atTurn + userName + '" data-user="' + userName + '" target="_blank"  class="atLink">@' + userName + '</a>');
				// 		} else {
				// 			text = text.replace(atList[i], '<a href="javascript:;" data-user="' + userName + '"  class="atLink">@' + userName + '</a>');
				// 		}
				// 	}
				// }
				return text;
			};
			that.transMedia = function(text) {
				var mediaReg = /\[((http|ftp|https)(\:\/\/).*?)\]/g, //[图片视频]正则
					mediaList = text.match(mediaReg),
					videoBtn = [],
					imageBtn = [];
				if (mediaList != null) {
					for (var i = 0; i < mediaList.length; i++) {
						if (mediaList[i].match(/\/v\//) && res.data) {
							var hd = '',
								sd = '',
								hash = mediaList[i];
							hash = hash.replace('[', '');
							hash = hash.replace(']', '');
							hash = hash.replace('http://15feng.cn/v/', '');
							for (var j = 0, lenn = res.data.videolist.length; j < lenn; j++) {
								if (res.data.videolist[j].videourl.hash == hash) {
									sd = res.data.videolist[j].videourl.sd;
									hd = res.data.videolist[j].videourl.hd;
									poster = res.data.videolist[j].image.url;
									break;
								}
							}
							if (res.vTurn) {
								text = text.replace(mediaList[i], ' <a href="' + res.vTurn + '" class="videoLink" data-type="v" target="_blank"><i class="icon icon-video"></i>查看视频</a>');
							} else {
								text = text.replace(mediaList[i], ' <a href="javascript:;" hd="' + hd + '" sd="' + sd + '" poster="' + poster + '" hash="' + hash + '" class="videoLink" data-type="v" onclick="Od.OpenMediaView(this)"><i class="icon icon-video"></i>查看视频</a>');
							}
						} else if (mediaList[i].match(/\/p\//)) {
							var hash = mediaList[i],
								height = 0,
								width = 0,
								url = '',
								mimeType = '';
							hash = hash.replace('[', '');
							hash = hash.replace(']', '');
							hash = hash.replace('http://15feng.cn/p/', '');
							if (res.data) { //私信以外（私信结构与其它不同）
								for (var j = 0, lenn = res.data.imagelist.length; j < lenn; j++) {
									if (res.data.imagelist[j].image.hash == hash) {
										width = res.data.imagelist[j].image.width;
										height = res.data.imagelist[j].image.height;
										url = res.data.imagelist[j].image.url;
										mimeType = res.data.imagelist[j].image.mimetype;
										break;
									}
								}
							} else { //私信结构
								width = 350;
								height = 350;
								hash = hash;
								url = iDomain + hash;
							}

							if (res.iTurn) {
								text = text.replace(mediaList[i], ' <a href="' + res.iTurn + '" w="' + width + '" h="' + height + '" url="' + url + '" hash="' + hash + '" mimetype="' + mimeType + '" class="imageLink" data-type="i" target="_blank"><i class="icon icon-image"></i>查看图片</a>');
							} else {
								text = text.replace(mediaList[i], ' <a href="javascript:;" w="' + width + '" h="' + height + '" url="' + url + '" hash="' + hash + '" mimetype="' + mimeType + '" class="imageLink" data-type="i" onclick="Od.OpenMediaView(this)"><i class="icon icon-image"></i>查看图片</a>');
							}
						}
					}
				}
				return text;
			};
			that.transLookAtAll = function(text) {
				var lookAtAllReg = /\[lsj\:lookatall\]/g;
				text = text.replace(lookAtAllReg, '<a href="' + res.lookAtAllUrl + '" class="odLookAtAll" target="_blank">全文</a>');
				return text;
			};
			res.text = that.transHtml(res.text);
			res.text = that.transCustomFace(res.text);
			res.text = that.transTopic(res.text);
			res.text = that.transMedia(res.text);
			res.text = that.transAtName(res.text);
			res.text = that.transUrl(res.text);
			if (res.lookAtAllUrl) {
				res.text = that.transLookAtAll(res.text);
			}
			return res.text;
		};
		//打开图片浮层图片尺寸适配======================================================================================================================
		this.BigImgShow = function(imgW, imgH, maxWidth, maxHeight) {
			var boxWidth, boxHeight;
			if (imgW > maxWidth) {
				if (imgH > maxHeight) {
					if (maxWidth / imgW * imgH > maxHeight) {
						boxHeight = maxHeight;
					} else {
						boxHeight = maxWidth / imgW * imgH;
					}
				} else {
					boxHeight = maxWidth * imgH / imgW;
				}

			} else {
				if (imgH > maxHeight) {
					boxHeight = maxHeight;
				} else {
					boxHeight = imgH;
				}
			}
			if (boxHeight < 350) {
				boxHeight = 350;
			}
			boxWidth = imgW / imgH * boxHeight;
			if (boxWidth > maxWidth) {
				boxWidth = maxWidth;
			}
			return {
				width: parseInt(boxWidth),
				height: parseInt(boxHeight)
			}
		};
		//加载视频播放器====================================================================================================================
		this.VideoPlayer = function(res) {
			if ((typeof(Worker) !== 'undefined')) {
				var player = new Clappr.Player({
					source: res.source,
					mimeType: "video/mp4",
					poster: res.cover,
					// parentId: '#player' + res.snsId,
					parentId: '#player' + res.playerId,
					hideMediaControl: true,
					width: res.width,
					height: res.height,
					events: {
						onPlay: function() {
							var thisPlayer = document.getElementById('player' + res.playerId);
							thisPlayer.querySelector('.media-control-layer').setAttribute("style", "");
							thisPlayer.querySelector('.media-control-background').setAttribute("style", "");
							var allPlayer = document.querySelectorAll('.player');
							for (var i = 0, len = allPlayer.length; i < len; i++) {
								if (allPlayer[i].id != 'player' + res.playerId && allPlayer[i].getElementsByTagName('video').length > 0) {
									allPlayer[i].getElementsByTagName('video')[0].pause();
								}
							}
						},
						onPause: function() {
							var thisPlayer = document.getElementById('player' + res.playerId);
							thisPlayer.querySelector('.media-control-layer').style.bottom = '7px';
							thisPlayer.querySelector('.media-control-background').style.opacity = 1;
						}
					},
					plugins: {
						core: [xxxxxPlayerControler],
						container: [xxxxxPlayerContainer]
					}
				});
			} else {
				var flashWidth = 480,
					flashHeight = 270;
				if (res.width) {
					flashWidth = res.width;
				}
				if (res.height) {
					flashHeight = res.height;
				}
				// var flashPlayer = '<embed type="application/x-shockwave-flash" src="/newplayer/player.swf"  bgcolor="#000000" quality="high" allowfullscreen="true" allowscriptaccess="always" wmode="opaque" salign="lt" flashvars="videoDefault=' + res.source + '&autoHide=true&hideType=fade&autoStart=false&holdImage=start.jpg&startVol=60&hideDelay=60&bgAlpha=75" height="' + flashHeight + '" width="' + flashWidth + '"></embed>';
				// document.getElementById('player' + res.playerId).innerHTML = flashPlayer;
				playSource[res.playerId] = {
					"cover": res.cover,
					"defaultPlay": 1,
					"data": [{
						"desc": "高清",
						"url": document.getElementById('player' + res.playerId).querySelector('.hd').value
					}, {
						"desc": "超清",
						"url": document.getElementById('player' + res.playerId).querySelector('.sd').value
					}]
				};
				var player = '<object width="' + flashWidth + '" height="' + flashHeight + '" id="videoplayer' + res.playerId + '" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,0,0" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000">' +
					'<param value="/Od-API/lib/newplayer/player.swf" name="movie">' +
					'<param name="wmode" value="transparent">' +
					'<param value="true" name="allowFullScreen">' +
					'<param value="always" name="allowScriptAccess">' +
					'<param value="autostart=0&source=playSource[' + res.playerId + ']" name="flashVars">' +
					'<embed width="' + flashWidth + '" height="' + flashHeight + '" flashVars="autostart=0&source=playSource[' + res.playerId + ']" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" allowscriptaccess="always" allowfullscreen="true" wmode="transparent" name="player" src="/Od-API/lib/newplayer/player.swf">' +
					'</object>';
				document.getElementById('player' + res.playerId).innerHTML = player;
			}
		};
		//加载音频播放器====================================================================================================================
		this.AudioPlayer = function(res) {
			var swfID = res.id + '_player';
			var flashVars = 'api=' + encodeURI(res.api) + '&hash=' + res.hash + '&duration=' + res.duration + '&title=' + encodeURI(res.title);
			var audioHtml = '<object width="100%" height="100%" id="' + swfID + '" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,0,0" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000">' +
				'<param value="/Od-API/lib/newplayer/audio.swf" name="movie">' +
				'<param name="wmode" value="transparent">' +
				'<param value="true" name="allowFullScreen">' +
				'<param value="always" name="allowScriptAccess">' +
				'<param value="' + flashVars + '" name="flashVars">' +
				'<embed width="100%" height="100%" flashVars="' + flashVars + '" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" allowscriptaccess="always" allowfullscreen="true" wmode="transparent" name="' + swfID + '" src="/Od-API/lib/newplayer/audio.swf">' +
				'</object>';
			return audioHtml;
		};
		//打开查看图片/视频浮层=========================================================================================================================
		this.OpenMediaView = function(target) {
			if (target.getAttribute('data-type') == 'v') { //打开视频
				Od.Window({
					id: 'odWindow-' + target.getAttribute('hash'),
					title: '查看视频',
					submitBtn: false,
					cancelBtn: false,
					html: '<div class="view-video-layer player" id="player-layer"><input type="hidden" class="sd" value="' + target.getAttribute('sd') + '"><input type="hidden" class="hd" value="' + target.getAttribute('hd') + '"><!--[if IE]>  <embed type="application/x-shockwave-flash" src="/newplayer/player.swf"  bgcolor="#000000" quality="high" allowfullscreen="true" allowscriptaccess="always" wmode="opaque" salign="lt" flashvars="videoDefault=' + target.getAttribute('sd') + '&autoHide=true&hideType=fade&autoStart=false&holdImage=start.jpg&startVol=60&hideDelay=60&bgAlpha=75" height="410" width="728"></embed><![endif]--></div>'
				});
				Od.VideoPlayer({
					source: target.getAttribute('sd'),
					cover: target.getAttribute('poster'),
					playerId: '-layer'
				});
			} else if (target.getAttribute('data-type') == 'i') { //打开图片
				var imgUrl = target.getAttribute('url'),
					imgHash = target.getAttribute('hash'),
					imgH = target.getAttribute('h'),
					imgW = target.getAttribute('w'),
					maxH = winHeight - 270,
					maxW = winWidth - 270;
				var thisWindow = Od.Window({
					id: 'odWindow-' + imgHash,
					title: '查看图片',
					submitBtn: false,
					cancelBtn: false,
					html: (function(html) {

						html = '<div style="overflow:hidden;background-color:#e8e8e8;width:' + Od.BigImgShow(imgW, imgH, maxW, maxH).width + 'px;height:' + Od.BigImgShow(imgW, imgH, maxW, maxH).height + 'px;min-width:350px;min-height:350px;text-align:center;vertical-align:middle;display:table-cell;line-height:0;">';
						if (Od.BigImgShow(imgW, imgH, maxW, maxH).width > Od.BigImgShow(imgW, imgH, maxW, maxH).height) {
							// html += '<img style="opacity:0" onload="this.style.opacity=1" src="' + imgUrl + '?imageView2/2/w/' + Od.BigImgShow(imgW, imgH, maxW, maxH).width + '/q/100|watermark/1/image/aHR0cDovLzd4c2N3NS5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYW9zam1rLnBuZw==/gravity/South/dy/5"/>';
							html += Od.ImageUrl({
								type: 2,
								w: Od.BigImgShow(imgW, imgH, maxW, maxH).width,
								gravity: 'Center',
								hash: imgHash,
								returnHtml: true
							});
						} else {
							// html += '<img style="opacity:0;transition:opacity 0.2s linear" onload="this.style.opacity=1" src="' + imgUrl + '?imageView2/2/h/' + Od.BigImgShow(imgW, imgH, maxW, maxH).height + '/q/100|watermark/1/image/aHR0cDovLzd4c2N3NS5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYW9zam1rLnBuZw==/gravity/South/dy/5"/>';
							html += Od.ImageUrl({
								type: 2,
								h: Od.BigImgShow(imgW, imgH, maxW, maxH).height,
								gravity: 'Center',
								hash: imgHash,
								returnHtml: true
							});
						}
						html += '</div>';
						return html;
					}())
				});
				// thisWindow.style.width = Od.BigImgShow(imgW, imgH, maxW, maxH).width + 'px';
				// thisWindow.style.height = Od.BigImgShow(imgW, imgH, maxW, maxH).height + 'px';
			}
		};
		//POP浮层===========================================================================================================================
		var PopLayerId = '';
		this.PopLayer = function(res) {
			var popLayer;
			var flag = true;

			function PopLayerHtml(res, popLayer) { //popLayer的html函数
				if (res.arrow) {
					var arrow = document.createElement('span');
					arrow.className = 'arrow';
					arrow.innerHTML = '<em></em><i></i>';
					popLayer.appendChild(arrow);
				}
				if (res.method == 'handleClose-click' || res.method == 'handleClose-auto') {
					var popClose = document.createElement('a');
					popClose.id = 'pop-close-' + res.id;
					popClose.className = 'pop-close';
					popClose.setAttribute('href', 'javascript:;');
					popLayer.appendChild(popClose);
				}
				var content = document.createElement('div');
				content.className = 'content';
				var popContent = content;
				if (typeof(res.html) == 'function') {
					res.html(popContent);
				} else {
					popContent.innerHTML = res.html;
				}
				popLayer.appendChild(popContent)
			};

			function OpenFunc() {
				if (res.id) {
					if (!document.getElementById('OdPopLayer-' + res.id)) {
						popLayer = document.createElement('div');
						popLayer.id = 'OdPopLayer-' + res.id;
						popLayer.className = 'OdPopLayer';
						if (res.zIndex) {
							popLayer.style.zIndex = res.zIndex;
						}
						PopLayerHtml(res, popLayer);
						document.body.appendChild(popLayer);
					} else {
						popLayer = document.getElementById('OdPopLayer-' + res.id);
					}
				} else {
					if (!document.getElementById('OdPopLayer')) {
						popLayer = document.createElement('div');
						popLayer.id = 'OdPopLayer';
						popLayer.className = 'OdPopLayer';
						PopLayerHtml(res, popLayer);
						document.body.appendChild(popLayer);
					} else {
						popLayer = document.getElementById('OdPopLayer');
					}
				}
				var w = popLayer.offsetWidth;
				var h = popLayer.offsetHeight;
				var targetLeft = Od.Left(res.target);
				var targetTop = Od.Top(res.target);
				var targetWidth = res.target.offsetWidth;
				var targetHeight = res.target.offsetHeight;
				if (targetLeft + w >= winWidth) {
					popLayer.style.left = targetWidth + targetLeft - w + 'px';
					popLayer.getElementsByTagName('span')[0].style.left = w + targetWidth / 2 - targetWidth - 7 + 'px';
				} else {
					popLayer.style.left = targetLeft + 'px';
					popLayer.getElementsByTagName('span')[0].style.left = targetWidth / 2 - 7 + 'px';
				}
				popLayer.style.top = targetTop + targetHeight + 10 + 'px';
				if (res.method == 'handleClose-click' || res.method == 'handleClose-auto') {
					document.getElementById('pop-close-' + res.id).onclick = function(e) {
						Od.Alert({
							html: res.handleCloseText ? res.handleCloseText : '是否关闭？', //弹出框html
							cancelBtn: true, //是否显示取消按钮，默认false，可不加。
							target: Od.Target(e), //触发此事件按钮
							callBack: function() { //点击确定的回调，可不加
								RemoveFunc(res.id);
							}
						});
					}
				}
				setTimeout(function() {
					popLayer.style.transition = 'all 0.2s linear';
					popLayer.setAttribute('class', 'OdPopLayer show');
				}, 20);
			};

			function RemoveFunc(PopLayerId) {
				if (document.getElementById('OdPopLayer') && !res.id) {
					document.getElementById('OdPopLayer').setAttribute('class', 'OdPopLayer');
					setTimeout(function() {
						var a = document.getElementById('OdPopLayer');
						if (a) {
							document.body.removeChild(a);
							if (res.closeCallBack) {
								res.closeCallBack();
							}
						}
					}, 200);
				}
				if (document.getElementById('OdPopLayer-' + PopLayerId) && PopLayerId) {
					document.getElementById('OdPopLayer-' + PopLayerId).setAttribute('class', 'OdPopLayer');
					setTimeout(function() {
						var a = document.getElementById('OdPopLayer-' + PopLayerId);
						if (res.closeCallBack) {
							res.closeCallBack();
						}
						if (a) {
							document.body.removeChild(a);
						}
					}, 200);
				}
			};

			if (res.method == 'mouseenter') {
				var seconds = 0;
				var timer;
				res.target.onmouseenter = function() {
					clearInterval(timer);
					timer = setInterval(function() {
						seconds = seconds + 100;
						if (seconds > 1000) {
							clearInterval(timer);
							OpenFunc();
							seconds = 0;
						}
					}, 100);
				};
				res.target.onmouseleave = function(e) {
					if (document.getElementById('OdPopLayer')) {
						document.getElementById('OdPopLayer').onmouseenter = function() {
							flag = false;
						}
						document.getElementById('OdPopLayer').onmouseleave = function() {
							flag = true;
						}
					}
					clearInterval(timer);
					timer = setInterval(function() {
						seconds = seconds + 100;
						if (seconds > 500 && flag == true) {
							clearInterval(timer);
							RemoveFunc();
							seconds = 0;
						}
					}, 100);
				};
				return;
			}
			if (res.method == 'click') {
				res.target.onclick = function() {
					OpenFunc();
					document.onclick = function(e) {
						e = e || event || window.event;
						var dom;
						if (e.target) {
							dom = e.target;
						} else {
							dom = e.srcElement;
						}
						var c = [];
						a();

						function a() {
							if (dom.parentNode) {
								b();
							} else {
								return;
							}
						};

						function b() {
							c.push(dom.id)
							dom = dom.parentNode;
							a();
						};
						if (c.indexOf('OdPopLayer-' + PopLayerId) < 0 && c.indexOf(PopLayerId) < 0) {
							RemoveFunc(PopLayerId);
						}
						PopLayerId = res.id;
					};
				};
				return;
			}
			if (res.method == 'handleClose-click') {
				res.target.onclick = function() {
					OpenFunc();
				}
			}
			if (res.method == 'handleClose-auto') {
				OpenFunc();
			}
		};
		//字数判定方法==================================================================================================================================
		this.CharCount = function(val) {
			var len = 0;
			var v = val;
			for (i = 0; i < v.length; i++) {
				if (v.charCodeAt(i) > 256) {
					len += 2;
				} else {
					len++;
				}
			}
			return Math.round(len / 2);
		};
		//获取当前光标位置==============================================================================================================================
		this.GetCursortPosition = function(input) {
			var CaretPos = 0;
			if (document.selection) {
				input.focus();
				var Sel = document.selection.createRange();
				Sel.moveStart('character', -input.value.length);
				CaretPos = Sel.text.length;
			} else if (input.selectionStart || input.selectionStart == '0') CaretPos = input.selectionStart;
			return (CaretPos);
		};
		//设置当前光标位置==============================================================================================================================
		this.SetCaretPosition = function(input, pos) {
			if (input.setSelectionRange) {
				input.focus();
				input.setSelectionRange(pos, pos);
			} else if (input.createTextRange) {
				var range = input.createTextRange();
				range.collapse(true);
				range.moveEnd('character', pos);
				range.moveStart('character', pos);
				range.select();
			}
		};
		//计算textarea/input字数
		this.InputCharCount = function(value, max) {
			//textarea字数判断========================================
			var thisCount;
			var customFaceReg = /(\[\$)([\u4e00-\u9fa5,a-z]*)(\$\])/g;
			if (value.match(customFaceReg)) {
				var nofaceValue = value.replace(customFaceReg, '');
				thisCount = Od.CharCount(nofaceValue) + value.match(customFaceReg).length * 5;
			} else {
				thisCount = Od.CharCount(value);
			}
			thisCount = max - thisCount;
			return thisCount;
		};
		//自定义textarea================================================================================================================================
		this.Textarea = function(res) {
			function creatTextarea() {
				var that = this.Textarea;
				var d = document.getElementById(res.id);
				if(d==null)return false;
				d.style.minHeight = res.minHeight + 'px';
				d.style.maxHeight = res.maxHeight + 'px';
				// d.style.overflow = 'hidden';
				if (!d.style.overflow) {
					d.style.overflow = 'hidden';
				}
				d.style.tableLayout = 'fixed';
				d.style.fontSize = res.fontSize + 'px';
				d.style.lineHeight = res.lineHeight + 'px';
				d.style.wordBreak = 'break-all';
				// ('style', 'transition:height 0.2s linear;font-size:' + res.fontSize + 'px;min-height:' + res.minHeight + 'px;line-height:1.2em;width:' + res.width + 'px;overflow:hidden;table-layout:fixed;word-break:break-all');
				// var l = Od.Left(d),
				// t = Od.Top(d),
				var l = d.offsetLeft,
					t = d.offsetTop,
					h = res.height;
				if (res.width) {
					var w = res.width + 'px';
				} else {
					var w = d.offsetWidth + 'px';
				}
				if (!document.getElementById('inputDiv' + res.id)) {
					var inputDiv = document.createElement('div');
					inputDiv.id = 'inputDiv' + res.id;
					inputDiv.setAttribute('style', 'left:' + l + 'px;top:' + t + 'px;width:' + w + ';font-size:' + res.fontSize + 'px;line-height:' + res.lineHeight + 'px;min-height:' + res.minHeight + 'px;max-height:' + res.maxHeight + 'px;overflow:auto;position:absolute;z-index:-1001;word-break: break-all;word-break: break-word;word-wrap:break-word;opacity:0;filter:alpha(opacity=0)');
					d.parentNode.appendChild(inputDiv);
				} else {
					var inputDiv = document.getElementById('inputDiv' + res.id);
				}
				return {
					d: d,
					inputDiv: inputDiv,
					l: l,
					t: t,
					w: w,
					h: h,
					that: that
				}
			};

			function odTextareaInputList(e, l, t, type) {
				var that = this.Textarea;
				var listHtml = document.createElement('ul');
				if (res.listZindex) {
					listHtml.setAttribute('style', 'left:' + l + 'px;top:' + (parseInt(t) + 20) + 'px;z-index:' + res.listZindex);
				} else {
					// listHtml.setAttribute('style', 'left:' + l + 'px;top:' + (parseInt(t) + 20) + 'px;');
				}
				listHtml.id = 'odTextareaInputList' + res.id;
				listHtml.className = 'odTextareaInputList';
				listHtml.innerHTML = '<span style="display:block;line-height:33px;text-align:center;">loading</span>';
				if (!document.getElementById('odTextareaInputList' + res.id)) {
					document.body.appendChild(listHtml);
				} else {
					if (res.listZindex) {
						document.getElementById('odTextareaInputList' + res.id).setAttribute('style', 'left:' + parseInt(l) + 'px;top:' + (parseInt(t) + 20) + 'px;z-index:' + res.listZindex);
					} else {
						document.getElementById('odTextareaInputList' + res.id).setAttribute('style', 'left:' + parseInt(l) + 'px;top:' + (parseInt(t) + 20) + 'px;');
					}

				}
				if (type == 'at') {
					if (document.getElementById('odTextareaInputList' + res.id).getAttribute('data-type') != 'at') {
						document.getElementById('odTextareaInputList' + res.id).setAttribute('data-type', 'at');
						Od.Ajax({
							method: 'post', //方法
							url: res.atUrl, //接口地址
							asyc: true, //是否为异步
							data: { //参数，可省
								'pageNo': 1,
								'pageSize': 20,
								'userId': document.getElementById('userid').value
							},
							before: function() {
								document.getElementById('odTextareaInputList' + res.id).innerHTML = '<span style="display:block;line-height:33px;text-align:center;"><img src="/images/new_loading.gif" style="width:30px;height:30px;margin-top:10px;"/></span>'
							},
							success: function(data) { //请求成功
								var followList = data.body.user.list;
								if (document.getElementById('odTextareaInputList' + res.id)) {
									document.getElementById('odTextareaInputList' + res.id).innerHTML = '<span style="display:block;line-height:33px;padding:0px 10px;color:#666">请选择需要@的人</span>';
									var atlist = document.cookie; //从cookie获取最近@的人
									atlist = atlist.match(/(atlist\=\[)(.*?)(\])/g);
									if (atlist) {
										atlist = atlist[0].replace('atlist=[', '').replace(']', '');
										if (atlist.length > 0) {
											atlist = atlist.split(',');
										}
									} else {
										atlist = [];
									}
									for (var j = 0, lenn = followList.length; j < lenn; j++) {
										console.log(atlist[j])
										if (atlist.indexOf(encodeURI(followList[j].name)) < 0) {
											atlist.push(encodeURI(followList[j].name));
										}
									}
									var len = atlist.length;
									if (len > 10) {
										len = 10;
									}
									for (var i = 0; i < len; i++) {
										atlist[i] = decodeURI(atlist[i]);
										var list = document.createElement('li');
										if (i == 0) {
											list.className = 'active';
										}
										list.innerHTML = '<a href="javascript:;">' + atlist[i] + '</a>';
										list.setAttribute('data-name', atlist[i]);
										list.onclick = function() {
											Od.ClickToInsert(creatTextarea().d, this.getAttribute('data-name') + ' ');
										};
										list.onmouseenter = function() {
											if (document.getElementById('odTextareaInputList' + res.id).querySelector('.active')) {
												document.getElementById('odTextareaInputList' + res.id).querySelector('.active').className = '';
											}
											this.className = 'active';
										};
										document.getElementById('odTextareaInputList' + res.id).appendChild(list);
									}
								}
							},
							error: function() { //请求接口失败

							}
						});
					}
				} else {
					if (document.getElementById('odTextareaInputList' + res.id).getAttribute('data-type') != 'topic') {
						document.getElementById('odTextareaInputList' + res.id).setAttribute('data-type', 'topic');
						// document.getElementById('odTextareaInputList' + res.id).innerHTML = '<div><h5>请输入话题内容</h5><input type="text" placeholder="#" id="topic-input"/><a href="javascript:;" id="topic-input-submit">确定</a></div>';
						// // document.getElementById('topic-input').focus();
						// document.getElementById('topic-input-submit').onclick = function() {
						// 	if (document.getElementById('topic-input').value != '') {
						// 		Od.ClickToInsert(d, (document.getElementById('topic-input').value).replace(/(^\s*)|(\s*$)/g, "") + '# ');
						// 		document.body.removeChild(document.getElementById('odTextareaInputList' + res.id));
						// 	}
						// };
						// document.getElementById('topic-input').onkeyup = function(e) {
						// 	e = e || event || window.event;
						// 	if (e && e.keyCode == 13 && document.getElementById('topic-input').value != '') {
						// 		Od.ClickToInsert(d, (document.getElementById('topic-input').value).replace(/(^\s*)|(\s*$)/g, "") + '# ');
						// 		document.body.removeChild(document.getElementById('odTextareaInputList' + res.id));
						// 	}
						// };
						Od.Ajax({
							method: 'post', //方法
							url: res.topicUrl, //接口地址
							asyc: true, //是否为异步
							data: { //参数，可省
								'pageNo': 1
							},
							before: function() {
								document.getElementById('odTextareaInputList' + res.id).innerHTML = '<span style="display:block;line-height:33px;text-align:center;"><img src="/images/new_loading.gif" style="width:30px;height:30px;margin-top:10px;"/></span>'
							},
							success: function(data) { //请求成功
								var topicList = data.topics;
								if (document.getElementById('odTextareaInputList' + res.id)) {
									document.getElementById('odTextareaInputList' + res.id).innerHTML = '<span style="display:block;line-height:33px;padding:0px 10px;color:#666">请选择话题</span>';
									var topiclist = document.cookie; //从cookie获取最近@的人
									topiclist = topiclist.match(/(topiclist\=\[)(.*?)(\])/g);
									if (topiclist) {
										topiclist = topiclist[0].replace('topiclist=[', '').replace(']', '');
										if (topiclist.length > 0) {
											topiclist = topiclist.split(',');
										}
									} else {
										topiclist = [];
									}
									for (var j = 0, lenn = topicList.length; j < lenn; j++) {
										if (topiclist.indexOf(encodeURI(topicList[j].topicname)) < 0) {
											topiclist.push(encodeURI(topicList[j].topicname));
										}
									}
									var len = topiclist.length;
									if (len > 10) {
										len = 10;
									}
									for (var i = 0; i < len; i++) {
										topiclist[i] = decodeURI(topiclist[i]);
										var list = document.createElement('li');
										if (i == 0) {
											list.className = 'active';
										}
										list.innerHTML = '<a href="javascript:;">' + topiclist[i] + '</a>';
										list.setAttribute('data', topiclist[i]);
										list.onclick = function() {
											Od.ClickToInsert(creatTextarea().d, this.getAttribute('data') + '# ');
										};
										list.onmouseenter = function() {
											if (document.getElementById('odTextareaInputList' + res.id).querySelector('.active')) {
												document.getElementById('odTextareaInputList' + res.id).querySelector('.active').className = '';
											}
											this.className = 'active';
										};
										document.getElementById('odTextareaInputList' + res.id).appendChild(list);
									}
									// var more = document.createElement('a');
									// more.style.display = 'block';
									// more.style.lineHeight = '30px';
									// more.style.textAlign = 'center';
									// more.innerHTML = '下一页';
									// document.getElementById('odTextareaInputList' + res.id).appendChild(more);
								}
							},
							error: function() { //请求接口失败

							}
						});
					}
				}
			};

			function odTextareaInputListRemove(e) {
				var that = this.Textarea;
				if (creatTextarea().d.value[Od.GetCursortPosition(creatTextarea().d) - 1] != '@' && creatTextarea().d.value[Od.GetCursortPosition(creatTextarea().d) - 1] != '#' && document.getElementById('odTextareaInputList' + res.id)) {
					document.body.removeChild(document.getElementById('odTextareaInputList' + res.id));
				}
			};

			function enterFunc(e) {
				var that = this.Textarea;
				e = e || event || window.event;
				var enter = creatTextarea().d.value;
				//============
				if (creatTextarea().d.scrollTop > 0) {
					creatTextarea().inputDiv.scrollTop = creatTextarea().d.scrollTop;
				}
				enter = enter.replace(/\</g, '&lt;');
				enter = enter.replace(/\>/g, '&gt;');
				if (creatTextarea().d.value[Od.GetCursortPosition(creatTextarea().d) - 1] == '@' || creatTextarea().d.value[Od.GetCursortPosition(creatTextarea().d) - 1] == '#') {
					var enter1 = enter.substring(0, Od.GetCursortPosition(creatTextarea().d) - 1);
					var enter2 = enter.substring(Od.GetCursortPosition(creatTextarea().d), enter.length);
					if (creatTextarea().d.value[Od.GetCursortPosition(creatTextarea().d) - 1] == '@') {
						enter = enter1 + '<sub>@</sub>' + enter2;
					} else {
						enter = enter1 + '<sup>#</sup>' + enter2;
					}
				}
				var aaa = enter.split(/\n/);
				var enterr = '';
				for (var i = 0, len = aaa.length; i < len; i++) {
					enterr += '<div style="min-height:' + res.lineHeight + 'px;line-height:' + res.lineHeight + 'px;table-layout:fixed;word-break:break-all">' + aaa[i].replace(/\s/g, '<span style="white-space: pre-wrap;"> </span>') + '</div>';
				}
				creatTextarea().inputDiv.innerHTML = enterr;
				if (creatTextarea().inputDiv.getElementsByTagName('sub').length > 0) {
					if (creatTextarea().d.scrollTop > 0) {
						var atT = Od.Top(creatTextarea().inputDiv.getElementsByTagName('sub')[0]) - creatTextarea().d.scrollTop;
					} else {
						var atT = Od.Top(creatTextarea().inputDiv.getElementsByTagName('sub')[0])
					}
					var atL = Od.Left(creatTextarea().inputDiv.getElementsByTagName('sub')[0]);
					odTextareaInputList(e, atL, atT, 'at');
				} else {
					odTextareaInputListRemove(e);
				}
				if (creatTextarea().inputDiv.getElementsByTagName('sup').length > 0) {
					if (creatTextarea().d.scrollTop > 0) {
						var atT = Od.Top(creatTextarea().inputDiv.getElementsByTagName('sup')[0]) - creatTextarea().d.scrollTop
					} else {
						var atT = Od.Top(creatTextarea().inputDiv.getElementsByTagName('sup')[0]);
					}
					var atL = Od.Left(creatTextarea().inputDiv.getElementsByTagName('sup')[0]);
					odTextareaInputList(e, atL, atT, 'topic');
				} else {
					odTextareaInputListRemove(e);
				}
				//textarea自适应高度
				if (creatTextarea().inputDiv.offsetHeight >= res.maxHeight) {
					creatTextarea().d.style.height = res.maxHeight + 'px';
					creatTextarea().d.style.overflow = 'auto';
				} else {
					creatTextarea().d.style.height = creatTextarea().inputDiv.offsetHeight + 'px';
					// creatTextarea().d.style.overflow = 'hidden';
				}

				if (res.countTarget) {
					if (Od.InputCharCount(creatTextarea().d.value, res.maxCharCount) < 0) {
						res.countTarget.innerHTML = '已超出<i>' + Math.abs(Od.InputCharCount(creatTextarea().d.value, res.maxCharCount)) + '</i>字';
					} else {
						res.countTarget.innerHTML = '';
					}
				}
			};
			creatTextarea().d.onkeydown = function(e) {
				var that = this.Textarea;
				var currentPosition = Od.GetCursortPosition(this);
				if (document.getElementById('odTextareaInputList' + res.id)) {
					var list = document.getElementById('odTextareaInputList' + res.id).getElementsByTagName('li');
					var index = 0;
				}

				function select(keyCode) {
					if (creatTextarea().d.value[currentPosition - 1] == '@' || creatTextarea().d.value[currentPosition - 1] == '#' && list.length > 0) {
						if (keyCode == 13) {
							if (creatTextarea().d.value[currentPosition - 1] == '@') {
								Od.ClickToInsert(creatTextarea().d, document.getElementById('odTextareaInputList' + res.id).querySelector('.active').getAttribute('data-name') + ' ');
							}
							if (creatTextarea().d.value[currentPosition - 1] == '#') {
								Od.ClickToInsert(creatTextarea().d, document.getElementById('odTextareaInputList' + res.id).querySelector('.active').getAttribute('data') + '# ');
							}
							return;
						}
						for (var i = 0, len = list.length; i < len; i++) {
							if (list[i].className == 'active') {
								index = i;
								list[i].className = '';
								break;
							}
						}
						if (keyCode == 38) {
							if (index - 1 >= 0) {
								list[index - 1].className = 'active';
							} else {
								list[list.length - 1].className = 'active';
							}
						}
						if (keyCode == 40) {
							if (index + 1 < list.length) {
								list[index + 1].className = 'active';
							} else {
								list[0].className = 'active';
							}
						}
					}
				};
				if (e) {
					e = e || event;
					if (e.keyCode == 38 || e.keyCode == 40 || e.keyCode == 13) {
						if (creatTextarea().d.value[currentPosition - 1] == '@' || creatTextarea().d.value[currentPosition - 1] == '#') {
							select(e.keyCode);
							e.preventDefault();
						}
					}
				} else {
					e = window.event;
					if (e.keyCode == 38 || e.keyCode == 40 || e.keyCode == 13) {
						if (creatTextarea().d.value[currentPosition - 1] == '@' || creatTextarea().d.value[currentPosition - 1] == '#') {
							select(e.keyCode);
							window.event.returnValue = false;
						}
					}
				}
				if (e && e.keyCode == 13 && e.ctrlKey && res.pubFunc) {
					res.pubFunc(this);
					creatTextarea().d.blur();
				}
			}
			creatTextarea().d.onkeyup = function(e) {
				enterFunc(e);
			};
			creatTextarea().d.onclick = function(e) {
				enterFunc(e);
			};
			creatTextarea().d.onfocus = function(e) {
				enterFunc(e);
			};
			creatTextarea().d.onpaste = function() {
				enterFunc();
			};
			creatTextarea().d.onblur = function(e) {
				if (document.getElementById('odTextareaInputList' + res.id)) {
					if (document.getElementById('odTextareaInputList' + res.id).getAttribute('data-type') == 'at' || document.getElementById('odTextareaInputList' + res.id).getAttribute('data-type') == 'topic') {
						setTimeout(function() {
							if (document.getElementById('odTextareaInputList' + res.id)) {
								document.body.removeChild(document.getElementById('odTextareaInputList' + res.id));
							}
						}, 200);
					}
				}
			};
			creatTextarea().d.oncut = function() {
				enterFunc();
			};
			var timer = setInterval(function() {
				if(!creatTextarea()){
					clearInterval(timer);
					return false;
				}
				if (creatTextarea().d.value) {
					enterFunc();
				}
				clearInterval(timer);
			}, 100);
		};
		//焦点图========================================================================================================================================
		// this.SlideOld = function(res) {
		// 	var flag = true;
		// 	var slideWrapper = document.getElementById(res.id);
		// 	slideWrapper.style.width = res.width + 'px';
		// 	slideWrapper.style.height = res.height + 'px';
		// 	slideWrapper.style.backgroundColor = '#000';
		// 	slideWrapper.style.overflow = 'hidden';
		// 	slideWrapper.style.position = 'relative';
		// 	var navUl = document.createElement('ul');
		// 	navUl.className = 'slide-nav';
		// 	navUl.style.position = 'absolute';
		// 	navUl.style.bottom = '0px';
		// 	navUl.style.width = '100%';
		// 	navUl.style.textAlign = 'center';
		// 	var ul = document.createElement('ul');
		// 	ul.style.position = 'absolute';
		// 	ul.style.transition = 'left ' + res.speed + 's ease-out';
		// 	ul.style.width = res.width * (res.dataList.length + 1) + 'px';
		// 	var handleLeft = document.createElement('a');
		// 	handleLeft.className = 'slideLeftHandle';
		// 	var handleRight = document.createElement('a');
		// 	handleRight.className = 'slideRightHandle';
		// 	handleRight.setAttribute('href', 'javascript:;');
		// 	handleLeft.setAttribute('href', 'javascript:;');
		// 	slideWrapper.appendChild(ul);
		// 	slideWrapper.appendChild(navUl);
		// 	slideWrapper.appendChild(handleLeft);
		// 	slideWrapper.appendChild(handleRight);
		// 	var canClick = true;
		// 	for (var i = 0, len = res.dataList.length; i < len; i++) {
		// 		var li = document.createElement('li');
		// 		var navLi = document.createElement('li');
		// 		li.style.lineHeight = 0;
		// 		li.style.height = res.height + 'px';
		// 		li.style.width = res.width + 'px';
		// 		li.style.float = 'left';
		// 		navLi.style.display = 'inline-block';
		// 		navLi.setAttribute('data-index', i);
		// 		var linkUrl = '';
		// 		if (res.dataList[i].id != 0) {
		// 			if (res.dataList[i].snstype == 0) {
		// 				linkUrl = '/thread/' + res.dataList[i].id + '.html';
		// 			}
		// 			if (res.dataList[i].snstype == 2) {
		// 				linkUrl = 'html/microessay.html?resourceId=' + res.dataList[i].id + '&resourceType=2';
		// 			}
		// 		} else {
		// 			linkUrl = res.dataList[i].url;
		// 		}
		// 		li.innerHTML = '<a href="' + linkUrl + '" target="_blank"><img src="' + res.dataList[i].image.url + '?imageMogr2/auto-orient/thumbnail/!' + res.width + 'x' + res.height + 'r/gravity/Center/crop/' + res.width + 'x' + res.height + '/quality/100"/></a>'
		// 		ul.appendChild(li);
		// 		navLi.innerHTML = '<a href="javascript:;"><i></i></a>';
		// 		navLi.onclick = function() {
		// 			i = parseInt(this.getAttribute('data-index'));
		// 			navUl.querySelector('.active').className = '';
		// 			navUl.getElementsByTagName('li')[i].className = 'active';
		// 			ul.style.transition = 'left ' + res.speed + 's ease-out';
		// 			ul.style.left = -res.width * i + 'px';
		// 			clearTimeout(timer);
		// 		}
		// 		navUl.appendChild(navLi);
		// 	}
		// 	var lastLi = document.createElement('li');
		// 	lastLi.style.lineHeight = 0;
		// 	lastLi.style.height = res.height + 'px';
		// 	lastLi.style.width = res.width + 'px';
		// 	lastLi.style.float = 'left';
		// 	lastLi.innerHTML = '<a href="javascript:;" title="' + res.dataList[0] + '"><img src="' + res.dataList[0].image.url + '?imageMogr2/auto-orient/thumbnail/!' + res.width + 'x' + res.height + 'r/gravity/Center/crop/' + res.width + 'x' + res.height + '/quality/100"/></a>'
		// 	ul.appendChild(lastLi);
		// 	var i = 0;
		// 	navUl.getElementsByTagName('li')[0].className = 'active';

		// 	function a() {
		// 		if (flag == true) {
		// 			ul.style.left = -res.width * i + 'px';
		// 			navUl.querySelector('.active').className = '';
		// 			if (i > res.dataList.length - 1) {
		// 				navUl.getElementsByTagName('li')[0].className = 'active';
		// 			} else {
		// 				navUl.getElementsByTagName('li')[i].className = 'active';
		// 			}
		// 			i++;
		// 			b();
		// 		}
		// 	};
		// 	var timer;

		// 	function b() {
		// 		if (res.timer) {
		// 			time = res.timer;
		// 		} else {
		// 			time = res.duration;
		// 		}
		// 		if (i > res.dataList.length) {
		// 			timer = setTimeout(function() {
		// 				i = 0;
		// 				navUl.querySelector('.active').className = '';
		// 				navUl.getElementsByTagName('li')[0].className = 'active'
		// 				ul.style.transition = 'left 0s ease-out';
		// 				a();
		// 			}, res.speed * 1000);

		// 		} else {
		// 			timer = setTimeout(function() {
		// 				ul.style.transition = 'left ' + res.speed + 's ease-out';
		// 				a();
		// 			}, time);
		// 		}
		// 	};
		// 	if (flag == true) {
		// 		a();
		// 	}
		// 	slideWrapper.onmouseenter = function() {
		// 		flag = false;
		// 		clearTimeout(timer);
		// 	};
		// 	slideWrapper.onmouseleave = function() {
		// 		flag = true;
		// 		b();
		// 	};
		// 	handleRight.onclick = function() {
		// 		flag = false;
		// 		clearTimeout(timer);
		// 		if (canClick) {
		// 			canClick = false;
		// 			i = i + 1;
		// 			navUl.querySelector('.active').className = '';
		// 			if (i > res.dataList.length + 1) {
		// 				ul.style.transition = 'left 0s ease-out';
		// 				ul.style.left = '0px';
		// 				setTimeout(function() {
		// 					ul.style.transition = 'left ' + res.speed + 's ease-out';
		// 					ul.style.left = -res.width * 1 + 'px';
		// 					navUl.getElementsByTagName('li')[1].className = 'active'
		// 					i = 2;
		// 				}, 20);
		// 			} else {
		// 				ul.style.left = -res.width * (i - 1) + 'px';
		// 				if (i > res.dataList.length) {
		// 					navUl.getElementsByTagName('li')[0].className = 'active';
		// 				} else {
		// 					navUl.getElementsByTagName('li')[i - 1].className = 'active';
		// 				}

		// 			}
		// 			setTimeout(function() {
		// 				canClick = true;
		// 			}, res.speed * 1500);
		// 		}
		// 	};
		// 	handleLeft.onclick = function() {
		// 		flag = false;
		// 		clearTimeout(timer);
		// 		if (canClick) {
		// 			canClick = false;
		// 			i = i - 1;
		// 			navUl.querySelector('.active').className = '';
		// 			if (i < 1) {
		// 				ul.style.transition = 'left 0s ease-out';
		// 				ul.style.left = -res.width * res.dataList.length + 'px';
		// 				navUl.getElementsByTagName('li')[res.dataList.length - 1].className = 'active'
		// 				setTimeout(function() {
		// 					ul.style.transition = 'left ' + res.speed + 's ease-out';
		// 					ul.style.left = -res.width * (res.dataList.length - 1) + 'px';
		// 					navUl.getElementsByTagName('li')[res.dataList.length - 1].className = 'active'
		// 					i = res.dataList.length;
		// 				}, 20);

		// 			} else {
		// 				ul.style.left = -res.width * (i - 1) + 'px';
		// 				navUl.getElementsByTagName('li')[i - 1].className = 'active'
		// 			}
		// 			setTimeout(function() {
		// 				canClick = true;
		// 			}, res.speed * 1500);
		// 		}
		// 	}
		// };
		this.Slide = function(res) {
			var that = this.Slide;
			var timer, timer1, timer3, index = 0,
				canClick = true;
			var mainDomArr = [];
			var mainWidth = parseInt((res.width - 10) * 6 / 7);
			var thumbWidth = parseInt((res.width - 10) / 7);
			var slideWrapper = document.createElement('div');
			slideWrapper.className = 'OdSlideWrapper';
			slideWrapper.style.width = res.width + 'px';
			slideWrapper.style.height = res.height + 'px';
			var slideMainUl = document.createElement('ul');
			slideMainUl.className = 'OdSlideMainUl';
			slideMainUl.style.width = mainWidth + 'px';
			slideMainUl.style.height = res.height + 'px';
			var slideThumbUl = document.createElement('ul');
			slideThumbUl.className = 'OdSlideThumbUl';
			slideThumbUl.style.width = thumbWidth + 'px';
			slideThumbUl.style.height = res.height + 'px';
			slideThumbUl.style.top = -(res.height - (thumbWidth / 2 * res.dataList.length)) / (res.dataList.length - 1) + 'px';
			for (var i = 0, len = res.dataList.length; i < len; i++) {
				var thumbLi = document.createElement('li');
				var mainLi = document.createElement('li');
				mainLi.style.width = mainWidth + 'px';
				mainLi.style.height = res.height + 'px';
				var linkUrl = '';
				if (res.dataList[i].id != 0) {
					if (res.dataList[i].snstype == 0) {
						linkUrl = '/thread/' + res.dataList[i].id + '.html';
					}
					if (res.dataList[i].snstype == 2) {
						linkUrl = 'html/microessay.html?resourceId=' + res.dataList[i].id + '&resourceType=2';
					}
				} else {
					linkUrl = res.dataList[i].url;
				}
				mainLi.innerHTML = '<a href="' + linkUrl + '" style="background:#ccc;display:table-cell;vertical-align:middle;text-align:center;width:' + mainWidth + 'px;height:' + mainWidth / 2 + '" target="_blank">' + Od.ImageUrl({
					type: 1,
					w: mainWidth,
					h: mainWidth / 2,
					gravity: 'Center',
					returnHtml: true,
					hash: res.dataList[i].image.hash
				}) + '</a>';
				mainDomArr.push(mainLi);
				thumbLi.style.marginTop = (res.height - (thumbWidth / 2 * res.dataList.length)) / (res.dataList.length - 1) + 'px';
				thumbLi.setAttribute('data-order', i);
				thumbLi.innerHTML = '<span style="width:' + (thumbWidth - 4) + 'px;height:' + (thumbWidth / 2 - 4) + 'px"><em style="top:' + (thumbWidth / 4 - 12) + 'px"></em></span><a style="background:#ccc;display:table-cell;vertical-align:middle;text-align:center;width:' + thumbWidth + 'px;height:' + thumbWidth / 2 + '">' + Od.ImageUrl({
					type: 1,
					w: thumbWidth,
					h: thumbWidth / 2,
					gravity: 'Center',
					returnHtml: true,
					hash: res.dataList[i].image.hash
				}) + '</a>';
				thumbLi.onclick = function(thisIndex, nextIndex) {
					if (index != parseInt(this.getAttribute('data-order')) && canClick) {
						canClick = false;
						slideMainUl.style.transition = 'top 0s linear';
						slideMainUl.style.top = '0px';
						thisIndex = index;
						nextIndex = parseInt(this.getAttribute('data-order'));
						isFirstTime = true;
						duration = res.duration;
						slideMainUl.innerHTML = '';
						slideMainUl.appendChild(mainDomArr[thisIndex]);
						slideMainUl.appendChild(mainDomArr[nextIndex]);
						timer3 = setTimeout(function() {
							index = nextIndex;
							if (slideThumbUl.querySelector('.active')) {
								slideThumbUl.querySelector('.active').className = '';
							}
							slideThumbUl.getElementsByTagName('li')[index].className = 'active';
							slideMainUl.style.transition = 'top ' + res.speed + 's linear';
							slideMainUl.style.top = -res.height + 'px';
							canClick = true;
						}, 50);
					}
				};
				slideThumbUl.appendChild(thumbLi);
			}
			mainDomArr.push(mainDomArr[0]);
			var isFirstTime = true;
			var flag = true;
			that.turnOver = function(thisIndex, nextIndex, duration) {
				if (slideThumbUl.querySelector('.active')) {
					slideThumbUl.querySelector('.active').className = '';
				}
				slideThumbUl.getElementsByTagName('li')[thisIndex].className = 'active';
				duration = res.duration;
				slideMainUl.innerHTML = '';
				slideMainUl.appendChild(mainDomArr[thisIndex]);
				slideMainUl.appendChild(mainDomArr[nextIndex]);
				slideMainUl.style.transition = 'top 0s linear';
				slideMainUl.style.top = '0px';
				timer = setTimeout(function() {
					if (flag) {
						that.turnStart(thisIndex, nextIndex);
					}
				}, duration);
			};
			that.turnStart = function(thisIndex, nextIndex) {
				if (slideThumbUl.querySelector('.active')) {
					slideThumbUl.querySelector('.active').className = '';
				}
				duration = res.duration;
				slideMainUl.style.transition = 'top ' + res.speed + 's linear';
				slideMainUl.style.top = -res.height + 'px';
				if (nextIndex >= res.dataList.length) {
					nextIndex = 0;
					isFirstTime = false;
				}
				slideThumbUl.getElementsByTagName('li')[nextIndex].className = 'active';
				timer1 = setTimeout(function() {
					index = nextIndex;
					that.turnOver(nextIndex, nextIndex + 1, res.duration);
				}, res.speed * 1000);

			};
			that.turnOver(0, 1);
			slideWrapper.onmouseenter = function() {
				clearTimeout(timer);
				clearTimeout(timer1);
				flag = false;
			}
			slideWrapper.onmouseleave = function() {
				flag = true;
				// clearTimeout(timer3);
				// canClick = true;
				that.turnOver(index, index + 1, res.duration)
			}
			slideWrapper.appendChild(slideMainUl);
			slideWrapper.appendChild(slideThumbUl);
			document.getElementById(res.id).appendChild(slideWrapper);
		};
		//九宫格========================================================================================================================================
		this.MediaBox = function(res) { //打开slide
			//九宫格展示
			var sort = 0;
			var that = this.MediaBox;
			var imageList = [];
			var flag = true;
			var ul = document.createElement('ul');
			var slideBox = document.createElement('div');
			var mediaBox = document.createElement('div');
			mediaBox.appendChild(slideBox);
			mediaBox.style.position = 'relative';
			mediaBox.className = 'odMediaBox';
			slideBox.className = 'slideBox';
			slideBox.style.transition = 'height 0.5s ease-out';
			ul.style.width = (res.cellWidth + 5) * 3 + 'px';
			ul.style.transition = 'all 0.5s ease-out';
			ul.style.lineHeight = '0';
			ul.style.verticalAlign = 'top';
			for (var j = 0, lenn = res.list.length; j < lenn; j++) {
				if (res.list[j].type == 2) {
					imageList.push(res.list[j]);
				}
			}
			if (imageList.length > 0) {
				if (imageList.length == 1) {
					var li = document.createElement('li');
					li.style.cursor = 'url(/cursor/zoom-in.cur), auto';
					li.style.display = 'block';
					li.style.float = 'left';
					li.style.margin = '0px 5px 5px 0px';
					li.style.position = 'relative';
					li.style.textAlign = 'center';
					li.style.backgroundColor = '#f0f0f0';
					li.style.overflow = 'hidden';
					li.setAttribute('data-sort', 0);
					li.setAttribute('data-height', imageList[0].image.height);
					li.setAttribute('data-width', imageList[0].image.width);
					li.setAttribute('data-hash', imageList[0].image.hash);
					li.setAttribute('style', 'cursor: url(/cursor/zoom-in.cur), auto;position:relative;display:inline-block;margin:0px 5px 5px 0px;width:' + res.cellWidth + 'px;height:' + res.cellHeight + 'px;overflow:hidden;background-color:#f0f0f0;transition:all 0.5s ease-out;text-align:center');
					var imageUrl;
					var w = imageList[0].image.width;
					var h = imageList[0].image.height;
					var hash = imageList[0].image.hash;
					if (hash == '') {
						hash = 'FtxZWb6hRGLDqCrGLT2H4NXm2kxV'
					}
					if (w >= h) {
						if (w <= 175) {
							if (w * 175 / h > 200) {
								imageUrl = Od.ImageUrl({
									type: 1,
									w: 200,
									h: 175,
									gravity: 'Center',
									hash: hash
								});
								li.style.width = '200px';
								li.style.height = '175px';
							} else {
								imageUrl = Od.ImageUrl({
									type: 1,
									w: w * 175 / h,
									h: 175,
									gravity: 'Center',
									hash: hash
								});
								li.style.width = w * 175 / h + 'px';
								li.style.height = '175px';
							}
						} else {
							if (w >= 200) {
								if (200 * h / w < 175) {
									imageUrl = Od.ImageUrl({
										type: 1,
										w: 200,
										h: 175,
										gravity: 'Center',
										hash: hash
									});
									li.style.width = '200px';
									li.style.height = '175px';
								} else {
									imageUrl = Od.ImageUrl({
										type: 1,
										w: 200,
										h: 200 * h / w,
										gravity: 'Center',
										hash: hash
									});
									li.style.width = '200px';
									li.style.height = 200 * h / w + 'px';
								}
							} else {
								if (h < 175) {
									imageUrl = Od.ImageUrl({
										type: 1,
										w: 200,
										h: 175,
										gravity: 'Center',
										hash: hash
									});
									li.style.width = '200px';
									li.style.height = '175px';
								} else {
									imageUrl = Od.ImageUrl({
										type: 1,
										w: w,
										h: h,
										gravity: 'Center',
										hash: hash
									});
									li.style.width = w + 'px';
									li.style.height = h + 'px';
								}
							}
						}
					} else {
						if (h <= 300) {
							if (w >= 200) {
								imageUrl = Od.ImageUrl({
									type: 2,
									w: 200,
									h: 200 * h / w,
									gravity: 'North',
									hash: hash
								});
								li.style.width = '200px';
								li.style.height = 200 * h / w + 'px';
							} else {
								if (w <= 175) {
									if (175 * h / w > 300) {
										imageUrl = Od.ImageUrl({
											type: 1,
											w: 175,
											h: 300,
											gravity: 'North',
											hash: hash
										});
										li.style.width = '175px';
										li.style.height = '300px';
									} else {
										imageUrl = Od.ImageUrl({
											type: 1,
											w: 175,
											h: 175 * h / w,
											gravity: 'North',
											hash: hash
										});
										li.style.width = '175px';
										li.style.height = 175 * h / w + 'px';
									}
								} else {
									imageUrl = Od.ImageUrl({
										type: 1,
										w: w,
										h: h,
										gravity: 'North',
										hash: hash
									});
									li.style.width = w + 'px';
									li.style.height = h + 'px';
								}
							}
						} else {
							if (w * 300 / h > 200) {
								imageUrl = Od.ImageUrl({
									type: 1,
									w: 200,
									h: 300,
									gravity: 'North',
									hash: hash
								});
								li.style.width = '200px';
								li.style.height = '300px';
							} else {
								if (w * 300 / h < 175) {
									imageUrl = Od.ImageUrl({
										type: 1,
										w: 175,
										h: 300,
										gravity: 'North',
										hash: hash
									});
									li.style.width = '175px';
									li.style.height = '300px';
								} else {
									imageUrl = Od.ImageUrl({
										type: 1,
										w: 300 * w / h,
										h: 300,
										gravity: 'North',
										hash: hash
									});
									li.style.width = 300 * w / h + 'px';
									li.style.height = '300px';
								}
							}
						}
					}
					li.appendChild(imageUrl);
					if (h / w >= 5) {
						var span = document.createElement('span');
						span.className = 'long-img-ico';
						span.innerText = '长图';
						li.appendChild(span);
					}
					li.onclick = function() {
						that.view(this, this.getAttribute('data-sort'));
					};
					ul.appendChild(li);
				} else {
					if (imageList.length == 7 || imageList.length == 8) {
						ul.style.width = (res.cellWidth + 5) * 4 + 'px';
					}
					if (imageList.length == 4) {
						ul.style.width = (res.cellWidth + 5) * 2 + 'px';
					}
					for (var k = 0, leng = imageList.length; k < leng; k++) {
						var li = document.createElement('li');
						li.style.textAlign = 'center';
						var imageUrl;
						var hash = imageList[k].image.hash;
						if (hash == '') {
							hash = 'FsTATUN8ma9VMn0kJ4BmGrsVdspl';
						}
						li.setAttribute('data-sort', k);
						li.setAttribute('data-height', imageList[k].image.height);
						li.setAttribute('data-width', imageList[k].image.width);
						li.setAttribute('data-hash', imageList[k].image.hash);
						li.setAttribute('style', 'cursor: url(/cursor/zoom-in.cur), auto;position:relative;display:inline-block;float:left;margin:0px 5px 5px 0px;width:' + res.cellWidth + 'px;height:' + res.cellHeight + 'px;overflow:hidden;background-color:#f0f0f0;transition:all 0.5s ease-out;text-align:center');
						li.appendChild(Od.ImageUrl({
							type: 1,
							w: res.cellWidth,
							h: res.cellHeight,
							gravity: 'Center',
							hash: hash
						}));
						if (imageList[k].image.height / imageList[k].image.width >= 5) {
							var span = document.createElement('span');
							span.className = 'long-img-ico';
							span.innerText = '长图';
							li.appendChild(span);
						}
						li.onclick = function() {
							that.view(this, this.getAttribute('data-sort'));
						};
						ul.appendChild(li);
					}
				}
				mediaBox.appendChild(ul);
				res.container.appendChild(mediaBox);
			}
			//关闭查看图片
			that.shut = function(dom) {
				if (flag) {
					console.log(flag)
					flag = false;
					dom.nextSibling.style.display = 'block';
					dom.style.height = dom.offsetHeight + 'px';
					dom.style.overflow = 'hidden';
					setTimeout(function() {
						dom.style.height = '0px';
					}, 50);
					setTimeout(function() {
						dom.innerHTML = '';
						dom.setAttribute('style', 'transition:height 0.5s ease-out;overflow:hidden');
						flag = true;
					}, 550);
				}
				var scrollTop;
				if (window.pageYOffset) {
					scrollTop = window.pageYOffset;
				} else {
					scrollTop = document.documentElement.scrollTop;
				}
				if (Od.Top(dom.parentNode.parentNode) < scrollTop) {
					window.scroll(0, Od.Top(dom.parentNode.parentNode.parentNode) - 50);
				}
			};
			//查看原图按钮
			var bigPicBtn = document.createElement('a');
			bigPicBtn.innerHTML = '<i></i>查看原图';
			bigPicBtn.className = 'bigPicBtn';
			bigPicBtn.setAttribute('target', '_blank');
			//切换图片
			that.switchImage = function(dom, index) {
				// window.scroll(0, mediaBoxScrollTop)
				if (flag) {
					var list = dom.parentNode.getElementsByTagName('li');
					dom.parentNode.previousSibling.innerHTML = '';
					dom.parentNode.previousSibling.appendChild(Od.ImageUrl({
						type: 2,
						w: res.width,
						hash: dom.getAttribute('data-hash')
					}));
					if (dom.getAttribute('data-width') > res.width) {
						dom.parentNode.previousSibling.style.height = res.width * dom.getAttribute('data-height') / dom.getAttribute('data-width') + 'px';
					} else {
						dom.parentNode.previousSibling.style.height = dom.getAttribute('data-height') + 'px';
					}
					for (var i = 0, len = list.length; i < len; i++) {
						list[i].className = ''
					}
					list[index].className = 'active';
					bigPicBtn.setAttribute('href', 'http://imageqiniu.xxxxxbbs.com/' + dom.getAttribute('data-hash') + '?imageView2/1/q/100|watermark/1/image/aHR0cDovLzd4c2N3NS5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYW9zam1rLnBuZw==/gravity/SouthEast/dy/5');
					sort = index;
					var scrollTop;
					if (window.pageYOffset) {
						scrollTop = window.pageYOffset;
					} else {
						scrollTop = document.documentElement.scrollTop;
					}
					if (Od.Top(dom.parentNode.parentNode) < scrollTop) {
						window.scroll(0, Od.Top(dom.parentNode.parentNode.parentNode) - 50);
					}
				}
			};
			//切换图片html
			that.slideHtml = function(dom, index) {
				if (flag) {
					flag = false;
					sort = parseInt(index);
					var type = 1;
					var slideMain = document.createElement('div');
					slideMain.style.backgroundColor = '#f0f0f0';
					slideMain.style.width = res.width + 'px';
					slideMain.style.overflow = 'hidden';
					slideMain.style.height = '0px';
					slideMain.style.textAlign = 'center';
					slideMain.style.transition = 'height 0.5s ease-out';
					//收起按钮/查看大图按钮
					var checkBtnBox = document.createElement('div');
					checkBtnBox.className = 'checkBtnBox';
					bigPicBtn.setAttribute('href', 'http://imageqiniu.xxxxxbbs.com/' + dom.getAttribute('data-hash') + '?imageView2/1/q/100|watermark/1/image/aHR0cDovLzd4c2N3NS5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYW9zam1rLnBuZw==/gravity/SouthEast/dy/5');
					var shutBtn = document.createElement('a');
					shutBtn.className = 'shutBtn';
					shutBtn.innerHTML = '<i></i>收起';
					shutBtn.href = 'javascript:;';
					shutBtn.onclick = function() {
						that.shut(this.parentNode.parentNode)
					};
					checkBtnBox.appendChild(shutBtn);
					checkBtnBox.appendChild(bigPicBtn);
					slideMain.onmousemove = function(e) {
						e = e || event || window.event;
						var x = e.x - Od.Left(slideMain);
						if (x >= 0 && x < 100 && sort > 0) {
							slideMain.style.cursor = 'url(/cursor/prev.cur), auto';
							type = 1;
						} else if (x > res.width - 100 && sort < dom.parentNode.getElementsByTagName('li').length - 1) {
							slideMain.style.cursor = 'url(/cursor/next.cur), auto';
							type = 2;
						} else {
							slideMain.style.cursor = 'url(/cursor/zoom-out.cur), auto';
							type = 3;
						}
					};
					slideMain.onclick = function() {
						if (type == 1) {
							if (parseInt(sort) - 1 >= 0) {
								that.switchImage(this.nextSibling.getElementsByTagName('li')[parseInt(sort) - 1], parseInt(sort) - 1);
							}
							return;
						}
						if (type == 2) {
							if (parseInt(sort) + 1 < this.nextSibling.getElementsByTagName('li').length) {
								that.switchImage(this.nextSibling.getElementsByTagName('li')[parseInt(sort) + 1], parseInt(sort) + 1);
							}
							return;
						}
						if (type == 3) {
							that.shut(this.parentNode);
							return;
						}
					}
					var slideThumb = document.createElement('ul');
					slideThumb.style.lineHeight = 0;
					slideThumb.style.verticalAlign = 'top';
					if (dom.parentNode.getElementsByTagName('li').length <= 1) {
						slideThumb.style.display = 'none';
					}
					slideThumb.className = 'slideThumb';
					slideThumb.style.marginTop = '10px';
					var thumbWidth = (res.width - 40) / 9;
					for (var i = 0, len = dom.parentNode.getElementsByTagName('li').length; i < len; i++) {
						var li = document.createElement('li');
						li.style.display = 'inline-block';
						li.style.overflow = 'hidden';
						li.style.height = li.style.width = thumbWidth + 'px';
						li.style.backgroundColor = '#f0f0f0';
						li.style.lineHeight = 0;
						li.style.textAlign = 'center';
						li.style.verticalAlign = 'top';
						li.setAttribute('data-sort', i);
						li.setAttribute('data-height', dom.parentNode.getElementsByTagName('li')[i].getAttribute('data-height'));
						li.setAttribute('data-width', dom.parentNode.getElementsByTagName('li')[i].getAttribute('data-width'));
						li.setAttribute('data-hash', dom.parentNode.getElementsByTagName('li')[i].getAttribute('data-hash'));
						if (i > 0) {
							li.style.marginLeft = '5px';
						}
						li.innerHTML = '<a href="javascript:;" style="width:' + (thumbWidth - 4) + 'px;height:' + (thumbWidth - 4) + 'px"></a>';
						li.appendChild(Od.ImageUrl({
							type: 1,
							w: Math.round(thumbWidth) + 1,
							h: Math.round(thumbWidth) + 1,
							gravity: 'Center',
							hash: dom.parentNode.getElementsByTagName('li')[i].getAttribute('data-hash')
						}));
						li.onclick = function() {
							that.switchImage(this, this.getAttribute('data-sort'))
						};
						slideThumb.appendChild(li);
					}
					dom.parentNode.previousSibling.appendChild(checkBtnBox);
					dom.parentNode.previousSibling.appendChild(slideMain);
					dom.parentNode.previousSibling.appendChild(slideThumb);
					setTimeout(function() {
						flag = true;
						that.switchImage(slideThumb.getElementsByTagName('li')[dom.getAttribute('data-sort')], dom.getAttribute('data-sort'));
						dom.parentNode.style.display = 'none';
					}, 60);
				}

			};
			//查看图片
			that.view = function(dom, index) {
				that.slideHtml(dom, index);
			};
		};
		//图片上传======================================================================================================================================
		this.imageUpload = function(res) {
			var multiFlag = true;
			if (res.singleSelect) {
				multiFlag = false;
			}
			var qiniuImgSdk = new QiniuJsSDK();
			res.uploader = qiniuImgSdk.uploader({
				uphosts: 0,
				// upIP: upIp,
				max_retries: 3,
				disable_statistics_report: true,
				runtimes: 'html5,flash,html4',
				browse_button: res.id,
				filters: {
					mime_types: [{
						title: "Image files",
						extensions: "jpg,gif,png,jpeg",
					}],
				},
				max_file_size: '20mb',
				flash_swf_url: 'lib/upload/Moxie.swf',
				dragdrop: false,
				chunk_size: '4mb',
				uptoken_url: '/thread/itoken',
				domain: iDomain,
				save_key: true,
				auto_start: true,
				multi_selection: multiFlag,
				init: {
					'FilesAdded': function(up, files) {
						res.fileAdd && res.fileAdd(up, files, res.uploader);
					},
					'UploadProgress': function(up, file) {
						res.fileProgress && res.fileProgress(up, file);
					},
					'UploadComplete': function() {
						res.fileComplete && res.fileComplete();
					},
					'FileUploaded': function(up, file, info) {
						res.fileLoaded && res.fileLoaded(up, file, info);
					},
					'Error': function(up, err, errTip) {
						res.upError && res.upError();
					}
				}
			});
			return res.uploader;
		};
		//视频上传======================================================================================================================================
		this.videoUpload = function(res) {
			var qiniuVideoSdk = new QiniuJsSDK();
			res.uploader = qiniuVideoSdk.uploader({
				uphosts: 0,
				// upIP: upIp,
				max_retries: 3,
				disable_statistics_report: true,
				runtimes: 'html5,flash,html4',
				browse_button: res.id,
				filters: {
					mime_types: [{
						title: "Video files",
						extensions: "flv,Flv,mp4,mov,mpeg,mpg,avi,rmvb,dat,vob,rm,wmv,asf,rmvn,mkv,3gp,3GP"
					}]
				},
				flash_swf_url: 'lib/upload/Moxie.swf',
				dragdrop: true,
				chunk_size: '4mb',
				uptoken_url: '/thread/vtoken',
				domain: iDomain,
				save_key: true,
				auto_start: true,
				multi_selection: false,
				init: {
					'FilesAdded': function(up, files) {
						res.fileAdd && res.fileAdd(up, files);
					},
					'UploadProgress': function(up, file) {
						res.fileProgress && res.fileProgress(up, file);
					},
					'UploadComplete': function() {
						res.fileComplete && res.fileComplete();
					},
					'FileUploaded': function(up, file, info) {
						res.fileLoaded && res.fileLoaded(up, file, info);
					},
					'Error': function(up, err, errTip) {
						res.upError && res.upError();
					}
				}
			});
			return res.uploader;
		};

		//上传文件浮层位置变化==========================================================================================================================
		var odPopLayerTimer = setInterval(function() {
			if (document.querySelectorAll('.OdPopLayer').length > 0) {
				for (var k = 0, len = document.querySelectorAll('.OdPopLayer').length; k < len; k++) {
					var generalId = document.querySelectorAll('.OdPopLayer')[k].id;
					var generalId1 = generalId.replace('OdPopLayer-', '');
					if (!document.getElementById(generalId1) && document.getElementById(generalId)) {
						document.body.removeChild(document.getElementById(generalId))
					}
					if (document.getElementById(generalId)) {
						document.getElementById(generalId).style.top = Od.Top(document.getElementById(generalId1)) + document.getElementById(generalId1).offsetHeight + 10 + 'px';
						document.getElementById(generalId).style.left = Od.Left(document.getElementById(generalId1)) + 'px';
					}
				}
			}
		}, 100);
	}
	var Od = new Od();
	global.Od = Od;
}(window));